Conflict in state 19 between rule 16 and token '|' resolved as reduce.
Conflict in state 19 between rule 16 and token '&' resolved as reduce.
Conflict in state 20 between rule 17 and token '|' resolved as reduce.
Conflict in state 20 between rule 17 and token '&' resolved as reduce.
Conflict in state 25 between rule 14 and token '|' resolved as reduce.
Conflict in state 25 between rule 14 and token '&' resolved as reduce.
Conflict in state 26 between rule 15 and token '|' resolved as reduce.
Conflict in state 26 between rule 15 and token '&' resolved as reduce.

Grammar
rule 1    statement_list -> statement_list statement
rule 2    statement_list ->		/* empty */
rule 3    statement -> TC_STRING '=' string_or_value
rule 4    statement -> TC_STRING
rule 5    statement -> SECTION
rule 6    statement -> '\n'
rule 7    string_or_value -> expr
rule 8    string_or_value -> TC_ENCAPSULATED_STRING
rule 9    string_or_value -> CFG_TRUE
rule 10   string_or_value -> CFG_FALSE
rule 11   string_or_value -> '\n'
rule 12   string_or_value -> '\000'
rule 13   expr -> constant_string
rule 14   expr -> expr '|' expr
rule 15   expr -> expr '&' expr
rule 16   expr -> '~' expr
rule 17   expr -> '!' expr
rule 18   expr -> '(' expr ')'
rule 19   constant_string -> TC_STRING

Terminals, with rules where they appear

$ (-1)
'\n' (10) 6 11
'!' (33) 17
'&' (38) 15
'(' (40) 18
')' (41) 18
'=' (61) 3
'|' (124) 14
'~' (126) 16
error (256)
TC_STRING (257) 3 4 19
TC_ENCAPSULATED_STRING (258) 8
SECTION (259) 5
CFG_TRUE (260) 9
CFG_FALSE (261) 10
'\000' (262) 12

Nonterminals, with rules where they appear

statement_list (17)
    on left: 1 2, on right: 1
statement (18)
    on left: 3 4 5 6, on right: 1
string_or_value (19)
    on left: 7 8 9 10 11 12, on right: 3
expr (20)
    on left: 13 14 15 16 17 18, on right: 7 14 15 16 17 18
constant_string (21)
    on left: 19, on right: 13


state 0

    $default	reduce using rule 2 (statement_list)

    statement_list	go to state 1



state 1

    statement_list  ->  statement_list . statement   (rule 1)

    $   	go to state 27
    TC_STRING	shift, and go to state 2
    SECTION	shift, and go to state 3
    '\n'	shift, and go to state 4

    statement	go to state 5



state 2

    statement  ->  TC_STRING . '=' string_or_value   (rule 3)
    statement  ->  TC_STRING .   (rule 4)

    '=' 	shift, and go to state 6

    $default	reduce using rule 4 (statement)



state 3

    statement  ->  SECTION .   (rule 5)

    $default	reduce using rule 5 (statement)



state 4

    statement  ->  '\n' .   (rule 6)

    $default	reduce using rule 6 (statement)



state 5

    statement_list  ->  statement_list statement .   (rule 1)

    $default	reduce using rule 1 (statement_list)



state 6

    statement  ->  TC_STRING '=' . string_or_value   (rule 3)

    TC_STRING	shift, and go to state 7
    TC_ENCAPSULATED_STRING	shift, and go to state 8
    CFG_TRUE	shift, and go to state 9
    CFG_FALSE	shift, and go to state 10
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '\n'	shift, and go to state 13
    '\000'	shift, and go to state 14
    '(' 	shift, and go to state 15

    string_or_value	go to state 16
    expr	go to state 17
    constant_string	go to state 18



state 7

    constant_string  ->  TC_STRING .   (rule 19)

    $default	reduce using rule 19 (constant_string)



state 8

    string_or_value  ->  TC_ENCAPSULATED_STRING .   (rule 8)

    $default	reduce using rule 8 (string_or_value)



state 9

    string_or_value  ->  CFG_TRUE .   (rule 9)

    $default	reduce using rule 9 (string_or_value)



state 10

    string_or_value  ->  CFG_FALSE .   (rule 10)

    $default	reduce using rule 10 (string_or_value)



state 11

    expr  ->  '~' . expr   (rule 16)

    TC_STRING	shift, and go to state 7
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '(' 	shift, and go to state 15

    expr	go to state 19
    constant_string	go to state 18



state 12

    expr  ->  '!' . expr   (rule 17)

    TC_STRING	shift, and go to state 7
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '(' 	shift, and go to state 15

    expr	go to state 20
    constant_string	go to state 18



state 13

    string_or_value  ->  '\n' .   (rule 11)

    $default	reduce using rule 11 (string_or_value)



state 14

    string_or_value  ->  '\000' .   (rule 12)

    $default	reduce using rule 12 (string_or_value)



state 15

    expr  ->  '(' . expr ')'   (rule 18)

    TC_STRING	shift, and go to state 7
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '(' 	shift, and go to state 15

    expr	go to state 21
    constant_string	go to state 18



state 16

    statement  ->  TC_STRING '=' string_or_value .   (rule 3)

    $default	reduce using rule 3 (statement)



state 17

    string_or_value  ->  expr .   (rule 7)
    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)

    '|' 	shift, and go to state 22
    '&' 	shift, and go to state 23

    $default	reduce using rule 7 (string_or_value)



state 18

    expr  ->  constant_string .   (rule 13)

    $default	reduce using rule 13 (expr)



state 19

    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)
    expr  ->  '~' expr .   (rule 16)


    $default	reduce using rule 16 (expr)



state 20

    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)
    expr  ->  '!' expr .   (rule 17)


    $default	reduce using rule 17 (expr)



state 21

    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)
    expr  ->  '(' expr . ')'   (rule 18)

    '|' 	shift, and go to state 22
    '&' 	shift, and go to state 23
    ')' 	shift, and go to state 24



state 22

    expr  ->  expr '|' . expr   (rule 14)

    TC_STRING	shift, and go to state 7
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '(' 	shift, and go to state 15

    expr	go to state 25
    constant_string	go to state 18



state 23

    expr  ->  expr '&' . expr   (rule 15)

    TC_STRING	shift, and go to state 7
    '~' 	shift, and go to state 11
    '!' 	shift, and go to state 12
    '(' 	shift, and go to state 15

    expr	go to state 26
    constant_string	go to state 18



state 24

    expr  ->  '(' expr ')' .   (rule 18)

    $default	reduce using rule 18 (expr)



state 25

    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr '|' expr .   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)


    $default	reduce using rule 14 (expr)



state 26

    expr  ->  expr . '|' expr   (rule 14)
    expr  ->  expr . '&' expr   (rule 15)
    expr  ->  expr '&' expr .   (rule 15)


    $default	reduce using rule 15 (expr)



state 27

    $   	go to state 28



state 28

    $default	accept
