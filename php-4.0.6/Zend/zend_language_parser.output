

Terminals which are not used:

   T_COMMENT
   T_ML_COMMENT
   T_OPEN_TAG
   T_OPEN_TAG_WITH_ECHO
   T_CLOSE_TAG
   T_WHITESPACE


Conflict in state 82 between rule 337 and token T_LOGICAL_OR resolved as shift.
Conflict in state 82 between rule 337 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 82 between rule 337 and token T_LOGICAL_AND resolved as shift.
Conflict in state 82 between rule 337 and token '?' resolved as shift.
Conflict in state 82 between rule 337 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 82 between rule 337 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 82 between rule 337 and token '|' resolved as shift.
Conflict in state 82 between rule 337 and token '^' resolved as shift.
Conflict in state 82 between rule 337 and token '&' resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_EQUAL resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 82 between rule 337 and token '<' resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 337 and token '>' resolved as shift.
Conflict in state 82 between rule 337 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 337 and token T_SL resolved as shift.
Conflict in state 82 between rule 337 and token T_SR resolved as shift.
Conflict in state 82 between rule 337 and token '+' resolved as shift.
Conflict in state 82 between rule 337 and token '-' resolved as shift.
Conflict in state 82 between rule 337 and token '.' resolved as shift.
Conflict in state 82 between rule 337 and token '*' resolved as shift.
Conflict in state 82 between rule 337 and token '/' resolved as shift.
Conflict in state 82 between rule 337 and token '%' resolved as shift.
Conflict in state 83 between rule 338 and token T_LOGICAL_OR resolved as shift.
Conflict in state 83 between rule 338 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 83 between rule 338 and token T_LOGICAL_AND resolved as shift.
Conflict in state 83 between rule 338 and token '?' resolved as shift.
Conflict in state 83 between rule 338 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 83 between rule 338 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 83 between rule 338 and token '|' resolved as shift.
Conflict in state 83 between rule 338 and token '^' resolved as shift.
Conflict in state 83 between rule 338 and token '&' resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_EQUAL resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 83 between rule 338 and token '<' resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 338 and token '>' resolved as shift.
Conflict in state 83 between rule 338 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 338 and token T_SL resolved as shift.
Conflict in state 83 between rule 338 and token T_SR resolved as shift.
Conflict in state 83 between rule 338 and token '+' resolved as shift.
Conflict in state 83 between rule 338 and token '-' resolved as shift.
Conflict in state 83 between rule 338 and token '.' resolved as shift.
Conflict in state 83 between rule 338 and token '*' resolved as shift.
Conflict in state 83 between rule 338 and token '/' resolved as shift.
Conflict in state 83 between rule 338 and token '%' resolved as shift.
Conflict in state 85 between rule 340 and token T_LOGICAL_OR resolved as shift.
Conflict in state 85 between rule 340 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 85 between rule 340 and token T_LOGICAL_AND resolved as shift.
Conflict in state 85 between rule 340 and token '?' resolved as shift.
Conflict in state 85 between rule 340 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 85 between rule 340 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 85 between rule 340 and token '|' resolved as shift.
Conflict in state 85 between rule 340 and token '^' resolved as shift.
Conflict in state 85 between rule 340 and token '&' resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_EQUAL resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 85 between rule 340 and token '<' resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 340 and token '>' resolved as shift.
Conflict in state 85 between rule 340 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 340 and token T_SL resolved as shift.
Conflict in state 85 between rule 340 and token T_SR resolved as shift.
Conflict in state 85 between rule 340 and token '+' resolved as shift.
Conflict in state 85 between rule 340 and token '-' resolved as shift.
Conflict in state 85 between rule 340 and token '.' resolved as shift.
Conflict in state 85 between rule 340 and token '*' resolved as shift.
Conflict in state 85 between rule 340 and token '/' resolved as shift.
Conflict in state 85 between rule 340 and token '%' resolved as shift.
Conflict in state 86 between rule 341 and token T_LOGICAL_OR resolved as shift.
Conflict in state 86 between rule 341 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 86 between rule 341 and token T_LOGICAL_AND resolved as shift.
Conflict in state 86 between rule 341 and token '?' resolved as shift.
Conflict in state 86 between rule 341 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 86 between rule 341 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 86 between rule 341 and token '|' resolved as shift.
Conflict in state 86 between rule 341 and token '^' resolved as shift.
Conflict in state 86 between rule 341 and token '&' resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_EQUAL resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 86 between rule 341 and token '<' resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 86 between rule 341 and token '>' resolved as shift.
Conflict in state 86 between rule 341 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 86 between rule 341 and token T_SL resolved as shift.
Conflict in state 86 between rule 341 and token T_SR resolved as shift.
Conflict in state 86 between rule 341 and token '+' resolved as shift.
Conflict in state 86 between rule 341 and token '-' resolved as shift.
Conflict in state 86 between rule 341 and token '.' resolved as shift.
Conflict in state 86 between rule 341 and token '*' resolved as shift.
Conflict in state 86 between rule 341 and token '/' resolved as shift.
Conflict in state 86 between rule 341 and token '%' resolved as shift.
Conflict in state 87 between rule 229 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 87 between rule 229 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 87 between rule 229 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 87 between rule 229 and token '?' resolved as shift.
Conflict in state 87 between rule 229 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 87 between rule 229 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 87 between rule 229 and token '|' resolved as shift.
Conflict in state 87 between rule 229 and token '^' resolved as shift.
Conflict in state 87 between rule 229 and token '&' resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_EQUAL resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 87 between rule 229 and token '<' resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 87 between rule 229 and token '>' resolved as shift.
Conflict in state 87 between rule 229 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 87 between rule 229 and token T_SL resolved as shift.
Conflict in state 87 between rule 229 and token T_SR resolved as shift.
Conflict in state 87 between rule 229 and token '+' resolved as shift.
Conflict in state 87 between rule 229 and token '-' resolved as shift.
Conflict in state 87 between rule 229 and token '.' resolved as shift.
Conflict in state 87 between rule 229 and token '*' resolved as shift.
Conflict in state 87 between rule 229 and token '/' resolved as shift.
Conflict in state 87 between rule 229 and token '%' resolved as shift.
Conflict in state 88 between rule 198 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 88 between rule 198 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 88 between rule 198 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 88 between rule 198 and token '?' resolved as reduce.
Conflict in state 88 between rule 198 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 88 between rule 198 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 88 between rule 198 and token '|' resolved as reduce.
Conflict in state 88 between rule 198 and token '^' resolved as reduce.
Conflict in state 88 between rule 198 and token '&' resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_EQUAL resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 198 and token '<' resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 198 and token '>' resolved as reduce.
Conflict in state 88 between rule 198 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 198 and token T_SL resolved as reduce.
Conflict in state 88 between rule 198 and token T_SR resolved as reduce.
Conflict in state 88 between rule 198 and token '+' resolved as reduce.
Conflict in state 88 between rule 198 and token '-' resolved as reduce.
Conflict in state 88 between rule 198 and token '.' resolved as reduce.
Conflict in state 88 between rule 198 and token '*' resolved as shift.
Conflict in state 88 between rule 198 and token '/' resolved as shift.
Conflict in state 88 between rule 198 and token '%' resolved as shift.
Conflict in state 89 between rule 199 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 89 between rule 199 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 89 between rule 199 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 89 between rule 199 and token '?' resolved as reduce.
Conflict in state 89 between rule 199 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 89 between rule 199 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 89 between rule 199 and token '|' resolved as reduce.
Conflict in state 89 between rule 199 and token '^' resolved as reduce.
Conflict in state 89 between rule 199 and token '&' resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_EQUAL resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 199 and token '<' resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 199 and token '>' resolved as reduce.
Conflict in state 89 between rule 199 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 199 and token T_SL resolved as reduce.
Conflict in state 89 between rule 199 and token T_SR resolved as reduce.
Conflict in state 89 between rule 199 and token '+' resolved as reduce.
Conflict in state 89 between rule 199 and token '-' resolved as reduce.
Conflict in state 89 between rule 199 and token '.' resolved as reduce.
Conflict in state 89 between rule 199 and token '*' resolved as shift.
Conflict in state 89 between rule 199 and token '/' resolved as shift.
Conflict in state 89 between rule 199 and token '%' resolved as shift.
Conflict in state 90 between rule 200 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 90 between rule 200 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 90 between rule 200 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 90 between rule 200 and token '?' resolved as reduce.
Conflict in state 90 between rule 200 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 90 between rule 200 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 90 between rule 200 and token '|' resolved as reduce.
Conflict in state 90 between rule 200 and token '^' resolved as reduce.
Conflict in state 90 between rule 200 and token '&' resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_EQUAL resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 90 between rule 200 and token '<' resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 90 between rule 200 and token '>' resolved as reduce.
Conflict in state 90 between rule 200 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 90 between rule 200 and token T_SL resolved as reduce.
Conflict in state 90 between rule 200 and token T_SR resolved as reduce.
Conflict in state 90 between rule 200 and token '+' resolved as reduce.
Conflict in state 90 between rule 200 and token '-' resolved as reduce.
Conflict in state 90 between rule 200 and token '.' resolved as reduce.
Conflict in state 90 between rule 200 and token '*' resolved as reduce.
Conflict in state 90 between rule 200 and token '/' resolved as reduce.
Conflict in state 90 between rule 200 and token '%' resolved as reduce.
Conflict in state 91 between rule 201 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 91 between rule 201 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 91 between rule 201 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 91 between rule 201 and token '?' resolved as reduce.
Conflict in state 91 between rule 201 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 91 between rule 201 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 91 between rule 201 and token '|' resolved as reduce.
Conflict in state 91 between rule 201 and token '^' resolved as reduce.
Conflict in state 91 between rule 201 and token '&' resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_EQUAL resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 91 between rule 201 and token '<' resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 91 between rule 201 and token '>' resolved as reduce.
Conflict in state 91 between rule 201 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 91 between rule 201 and token T_SL resolved as reduce.
Conflict in state 91 between rule 201 and token T_SR resolved as reduce.
Conflict in state 91 between rule 201 and token '+' resolved as reduce.
Conflict in state 91 between rule 201 and token '-' resolved as reduce.
Conflict in state 91 between rule 201 and token '.' resolved as reduce.
Conflict in state 91 between rule 201 and token '*' resolved as reduce.
Conflict in state 91 between rule 201 and token '/' resolved as reduce.
Conflict in state 91 between rule 201 and token '%' resolved as reduce.
Conflict in state 95 between rule 216 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 95 between rule 216 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 95 between rule 216 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 95 between rule 216 and token '?' resolved as reduce.
Conflict in state 95 between rule 216 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 95 between rule 216 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 95 between rule 216 and token '|' resolved as reduce.
Conflict in state 95 between rule 216 and token '^' resolved as reduce.
Conflict in state 95 between rule 216 and token '&' resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_EQUAL resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 216 and token '<' resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 216 and token '>' resolved as reduce.
Conflict in state 95 between rule 216 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 216 and token T_SL resolved as reduce.
Conflict in state 95 between rule 216 and token T_SR resolved as reduce.
Conflict in state 95 between rule 216 and token '+' resolved as reduce.
Conflict in state 95 between rule 216 and token '-' resolved as reduce.
Conflict in state 95 between rule 216 and token '.' resolved as reduce.
Conflict in state 95 between rule 216 and token '*' resolved as reduce.
Conflict in state 95 between rule 216 and token '/' resolved as reduce.
Conflict in state 95 between rule 216 and token '%' resolved as reduce.
Conflict in state 96 between rule 217 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 96 between rule 217 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 96 between rule 217 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 96 between rule 217 and token '?' resolved as reduce.
Conflict in state 96 between rule 217 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 96 between rule 217 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 96 between rule 217 and token '|' resolved as reduce.
Conflict in state 96 between rule 217 and token '^' resolved as reduce.
Conflict in state 96 between rule 217 and token '&' resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_EQUAL resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 217 and token '<' resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 217 and token '>' resolved as reduce.
Conflict in state 96 between rule 217 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 217 and token T_SL resolved as reduce.
Conflict in state 96 between rule 217 and token T_SR resolved as reduce.
Conflict in state 96 between rule 217 and token '+' resolved as reduce.
Conflict in state 96 between rule 217 and token '-' resolved as reduce.
Conflict in state 96 between rule 217 and token '.' resolved as reduce.
Conflict in state 96 between rule 217 and token '*' resolved as reduce.
Conflict in state 96 between rule 217 and token '/' resolved as reduce.
Conflict in state 96 between rule 217 and token '%' resolved as reduce.
Conflict in state 97 between rule 218 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 97 between rule 218 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 97 between rule 218 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 218 and token '?' resolved as reduce.
Conflict in state 97 between rule 218 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 97 between rule 218 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 97 between rule 218 and token '|' resolved as reduce.
Conflict in state 97 between rule 218 and token '^' resolved as reduce.
Conflict in state 97 between rule 218 and token '&' resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_EQUAL resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 218 and token '<' resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 218 and token '>' resolved as reduce.
Conflict in state 97 between rule 218 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 218 and token T_SL resolved as reduce.
Conflict in state 97 between rule 218 and token T_SR resolved as reduce.
Conflict in state 97 between rule 218 and token '+' resolved as reduce.
Conflict in state 97 between rule 218 and token '-' resolved as reduce.
Conflict in state 97 between rule 218 and token '.' resolved as reduce.
Conflict in state 97 between rule 218 and token '*' resolved as reduce.
Conflict in state 97 between rule 218 and token '/' resolved as reduce.
Conflict in state 97 between rule 218 and token '%' resolved as reduce.
Conflict in state 98 between rule 219 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 98 between rule 219 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 98 between rule 219 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 219 and token '?' resolved as reduce.
Conflict in state 98 between rule 219 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 98 between rule 219 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 98 between rule 219 and token '|' resolved as reduce.
Conflict in state 98 between rule 219 and token '^' resolved as reduce.
Conflict in state 98 between rule 219 and token '&' resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_EQUAL resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 219 and token '<' resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 219 and token '>' resolved as reduce.
Conflict in state 98 between rule 219 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 219 and token T_SL resolved as reduce.
Conflict in state 98 between rule 219 and token T_SR resolved as reduce.
Conflict in state 98 between rule 219 and token '+' resolved as reduce.
Conflict in state 98 between rule 219 and token '-' resolved as reduce.
Conflict in state 98 between rule 219 and token '.' resolved as reduce.
Conflict in state 98 between rule 219 and token '*' resolved as reduce.
Conflict in state 98 between rule 219 and token '/' resolved as reduce.
Conflict in state 98 between rule 219 and token '%' resolved as reduce.
Conflict in state 99 between rule 220 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 99 between rule 220 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 99 between rule 220 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 220 and token '?' resolved as reduce.
Conflict in state 99 between rule 220 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 99 between rule 220 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 99 between rule 220 and token '|' resolved as reduce.
Conflict in state 99 between rule 220 and token '^' resolved as reduce.
Conflict in state 99 between rule 220 and token '&' resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_EQUAL resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 220 and token '<' resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 220 and token '>' resolved as reduce.
Conflict in state 99 between rule 220 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 220 and token T_SL resolved as reduce.
Conflict in state 99 between rule 220 and token T_SR resolved as reduce.
Conflict in state 99 between rule 220 and token '+' resolved as reduce.
Conflict in state 99 between rule 220 and token '-' resolved as reduce.
Conflict in state 99 between rule 220 and token '.' resolved as reduce.
Conflict in state 99 between rule 220 and token '*' resolved as reduce.
Conflict in state 99 between rule 220 and token '/' resolved as reduce.
Conflict in state 99 between rule 220 and token '%' resolved as reduce.
Conflict in state 100 between rule 221 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 100 between rule 221 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 100 between rule 221 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 100 between rule 221 and token '?' resolved as reduce.
Conflict in state 100 between rule 221 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 100 between rule 221 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 100 between rule 221 and token '|' resolved as reduce.
Conflict in state 100 between rule 221 and token '^' resolved as reduce.
Conflict in state 100 between rule 221 and token '&' resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_EQUAL resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 100 between rule 221 and token '<' resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 100 between rule 221 and token '>' resolved as reduce.
Conflict in state 100 between rule 221 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 100 between rule 221 and token T_SL resolved as reduce.
Conflict in state 100 between rule 221 and token T_SR resolved as reduce.
Conflict in state 100 between rule 221 and token '+' resolved as reduce.
Conflict in state 100 between rule 221 and token '-' resolved as reduce.
Conflict in state 100 between rule 221 and token '.' resolved as reduce.
Conflict in state 100 between rule 221 and token '*' resolved as reduce.
Conflict in state 100 between rule 221 and token '/' resolved as reduce.
Conflict in state 100 between rule 221 and token '%' resolved as reduce.
Conflict in state 101 between rule 222 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 101 between rule 222 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 101 between rule 222 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 101 between rule 222 and token '?' resolved as reduce.
Conflict in state 101 between rule 222 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 101 between rule 222 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 101 between rule 222 and token '|' resolved as reduce.
Conflict in state 101 between rule 222 and token '^' resolved as reduce.
Conflict in state 101 between rule 222 and token '&' resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_EQUAL resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 101 between rule 222 and token '<' resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 101 between rule 222 and token '>' resolved as reduce.
Conflict in state 101 between rule 222 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 101 between rule 222 and token T_SL resolved as reduce.
Conflict in state 101 between rule 222 and token T_SR resolved as reduce.
Conflict in state 101 between rule 222 and token '+' resolved as reduce.
Conflict in state 101 between rule 222 and token '-' resolved as reduce.
Conflict in state 101 between rule 222 and token '.' resolved as reduce.
Conflict in state 101 between rule 222 and token '*' resolved as reduce.
Conflict in state 101 between rule 222 and token '/' resolved as reduce.
Conflict in state 101 between rule 222 and token '%' resolved as reduce.
Conflict in state 199 between rule 225 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 199 between rule 225 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 199 between rule 225 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 225 and token '?' resolved as reduce.
Conflict in state 199 between rule 225 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 199 between rule 225 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 199 between rule 225 and token '|' resolved as reduce.
Conflict in state 199 between rule 225 and token '^' resolved as reduce.
Conflict in state 199 between rule 225 and token '&' resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_EQUAL resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 225 and token '<' resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 225 and token '>' resolved as reduce.
Conflict in state 199 between rule 225 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 225 and token T_SL resolved as reduce.
Conflict in state 199 between rule 225 and token T_SR resolved as reduce.
Conflict in state 199 between rule 225 and token '+' resolved as reduce.
Conflict in state 199 between rule 225 and token '-' resolved as reduce.
Conflict in state 199 between rule 225 and token '.' resolved as reduce.
Conflict in state 199 between rule 225 and token '*' resolved as reduce.
Conflict in state 199 between rule 225 and token '/' resolved as reduce.
Conflict in state 199 between rule 225 and token '%' resolved as reduce.
Conflict in state 270 between rule 186 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 186 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 270 between rule 186 and token T_LOGICAL_AND resolved as shift.
Conflict in state 270 between rule 186 and token '?' resolved as shift.
Conflict in state 270 between rule 186 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 270 between rule 186 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 270 between rule 186 and token '|' resolved as shift.
Conflict in state 270 between rule 186 and token '^' resolved as shift.
Conflict in state 270 between rule 186 and token '&' resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_EQUAL resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 270 between rule 186 and token '<' resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 270 between rule 186 and token '>' resolved as shift.
Conflict in state 270 between rule 186 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 270 between rule 186 and token T_SL resolved as shift.
Conflict in state 270 between rule 186 and token T_SR resolved as shift.
Conflict in state 270 between rule 186 and token '+' resolved as shift.
Conflict in state 270 between rule 186 and token '-' resolved as shift.
Conflict in state 270 between rule 186 and token '.' resolved as shift.
Conflict in state 270 between rule 186 and token '*' resolved as shift.
Conflict in state 270 between rule 186 and token '/' resolved as shift.
Conflict in state 270 between rule 186 and token '%' resolved as shift.
Conflict in state 275 between rule 187 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 187 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 275 between rule 187 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 187 and token '?' resolved as reduce.
Conflict in state 275 between rule 187 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 275 between rule 187 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 275 between rule 187 and token '|' resolved as reduce.
Conflict in state 275 between rule 187 and token '^' resolved as shift.
Conflict in state 275 between rule 187 and token '&' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 275 between rule 187 and token '<' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token '>' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_SL resolved as shift.
Conflict in state 275 between rule 187 and token T_SR resolved as shift.
Conflict in state 275 between rule 187 and token '+' resolved as shift.
Conflict in state 275 between rule 187 and token '-' resolved as shift.
Conflict in state 275 between rule 187 and token '.' resolved as shift.
Conflict in state 275 between rule 187 and token '*' resolved as shift.
Conflict in state 275 between rule 187 and token '/' resolved as shift.
Conflict in state 275 between rule 187 and token '%' resolved as shift.
Conflict in state 276 between rule 189 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 189 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 276 between rule 189 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 189 and token '?' resolved as reduce.
Conflict in state 276 between rule 189 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 276 between rule 189 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 276 between rule 189 and token '|' resolved as reduce.
Conflict in state 276 between rule 189 and token '^' resolved as reduce.
Conflict in state 276 between rule 189 and token '&' resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_EQUAL resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 276 between rule 189 and token '<' resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 189 and token '>' resolved as shift.
Conflict in state 276 between rule 189 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 189 and token T_SL resolved as shift.
Conflict in state 276 between rule 189 and token T_SR resolved as shift.
Conflict in state 276 between rule 189 and token '+' resolved as shift.
Conflict in state 276 between rule 189 and token '-' resolved as shift.
Conflict in state 276 between rule 189 and token '.' resolved as shift.
Conflict in state 276 between rule 189 and token '*' resolved as shift.
Conflict in state 276 between rule 189 and token '/' resolved as shift.
Conflict in state 276 between rule 189 and token '%' resolved as shift.
Conflict in state 277 between rule 188 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 277 between rule 188 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 277 between rule 188 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 188 and token '?' resolved as reduce.
Conflict in state 277 between rule 188 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 277 between rule 188 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 277 between rule 188 and token '|' resolved as reduce.
Conflict in state 277 between rule 188 and token '^' resolved as reduce.
Conflict in state 277 between rule 188 and token '&' resolved as reduce.
Conflict in state 277 between rule 188 and token T_IS_EQUAL resolved as shift.
Conflict in state 277 between rule 188 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 277 between rule 188 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 277 between rule 188 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 277 between rule 188 and token '<' resolved as shift.
Conflict in state 277 between rule 188 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 188 and token '>' resolved as shift.
Conflict in state 277 between rule 188 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 188 and token T_SL resolved as shift.
Conflict in state 277 between rule 188 and token T_SR resolved as shift.
Conflict in state 277 between rule 188 and token '+' resolved as shift.
Conflict in state 277 between rule 188 and token '-' resolved as shift.
Conflict in state 277 between rule 188 and token '.' resolved as shift.
Conflict in state 277 between rule 188 and token '*' resolved as shift.
Conflict in state 277 between rule 188 and token '/' resolved as shift.
Conflict in state 277 between rule 188 and token '%' resolved as shift.
Conflict in state 278 between rule 204 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 204 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 278 between rule 204 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 204 and token '?' resolved as reduce.
Conflict in state 278 between rule 204 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 278 between rule 204 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 278 between rule 204 and token '|' resolved as reduce.
Conflict in state 278 between rule 204 and token '^' resolved as reduce.
Conflict in state 278 between rule 204 and token '&' resolved as reduce.
Conflict in state 278 between rule 204 and token T_IS_EQUAL resolved as an error.
Conflict in state 278 between rule 204 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 278 between rule 204 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 278 between rule 204 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 278 between rule 204 and token '<' resolved as shift.
Conflict in state 278 between rule 204 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 204 and token '>' resolved as shift.
Conflict in state 278 between rule 204 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 204 and token T_SL resolved as shift.
Conflict in state 278 between rule 204 and token T_SR resolved as shift.
Conflict in state 278 between rule 204 and token '+' resolved as shift.
Conflict in state 278 between rule 204 and token '-' resolved as shift.
Conflict in state 278 between rule 204 and token '.' resolved as shift.
Conflict in state 278 between rule 204 and token '*' resolved as shift.
Conflict in state 278 between rule 204 and token '/' resolved as shift.
Conflict in state 278 between rule 204 and token '%' resolved as shift.
Conflict in state 279 between rule 205 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 279 between rule 205 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 279 between rule 205 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 205 and token '?' resolved as reduce.
Conflict in state 279 between rule 205 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 279 between rule 205 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 279 between rule 205 and token '|' resolved as reduce.
Conflict in state 279 between rule 205 and token '^' resolved as reduce.
Conflict in state 279 between rule 205 and token '&' resolved as reduce.
Conflict in state 279 between rule 205 and token T_IS_EQUAL resolved as an error.
Conflict in state 279 between rule 205 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 279 between rule 205 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 279 between rule 205 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 279 between rule 205 and token '<' resolved as shift.
Conflict in state 279 between rule 205 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 205 and token '>' resolved as shift.
Conflict in state 279 between rule 205 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 205 and token T_SL resolved as shift.
Conflict in state 279 between rule 205 and token T_SR resolved as shift.
Conflict in state 279 between rule 205 and token '+' resolved as shift.
Conflict in state 279 between rule 205 and token '-' resolved as shift.
Conflict in state 279 between rule 205 and token '.' resolved as shift.
Conflict in state 279 between rule 205 and token '*' resolved as shift.
Conflict in state 279 between rule 205 and token '/' resolved as shift.
Conflict in state 279 between rule 205 and token '%' resolved as shift.
Conflict in state 280 between rule 202 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 280 between rule 202 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 280 between rule 202 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 280 between rule 202 and token '?' resolved as reduce.
Conflict in state 280 between rule 202 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 280 between rule 202 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 280 between rule 202 and token '|' resolved as reduce.
Conflict in state 280 between rule 202 and token '^' resolved as reduce.
Conflict in state 280 between rule 202 and token '&' resolved as reduce.
Conflict in state 280 between rule 202 and token T_IS_EQUAL resolved as an error.
Conflict in state 280 between rule 202 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 280 between rule 202 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 280 between rule 202 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 280 between rule 202 and token '<' resolved as shift.
Conflict in state 280 between rule 202 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 202 and token '>' resolved as shift.
Conflict in state 280 between rule 202 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 202 and token T_SL resolved as shift.
Conflict in state 280 between rule 202 and token T_SR resolved as shift.
Conflict in state 280 between rule 202 and token '+' resolved as shift.
Conflict in state 280 between rule 202 and token '-' resolved as shift.
Conflict in state 280 between rule 202 and token '.' resolved as shift.
Conflict in state 280 between rule 202 and token '*' resolved as shift.
Conflict in state 280 between rule 202 and token '/' resolved as shift.
Conflict in state 280 between rule 202 and token '%' resolved as shift.
Conflict in state 281 between rule 203 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 281 between rule 203 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 281 between rule 203 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 203 and token '?' resolved as reduce.
Conflict in state 281 between rule 203 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 281 between rule 203 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 281 between rule 203 and token '|' resolved as reduce.
Conflict in state 281 between rule 203 and token '^' resolved as reduce.
Conflict in state 281 between rule 203 and token '&' resolved as reduce.
Conflict in state 281 between rule 203 and token T_IS_EQUAL resolved as an error.
Conflict in state 281 between rule 203 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 281 between rule 203 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 281 between rule 203 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 281 between rule 203 and token '<' resolved as shift.
Conflict in state 281 between rule 203 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 281 between rule 203 and token '>' resolved as shift.
Conflict in state 281 between rule 203 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 281 between rule 203 and token T_SL resolved as shift.
Conflict in state 281 between rule 203 and token T_SR resolved as shift.
Conflict in state 281 between rule 203 and token '+' resolved as shift.
Conflict in state 281 between rule 203 and token '-' resolved as shift.
Conflict in state 281 between rule 203 and token '.' resolved as shift.
Conflict in state 281 between rule 203 and token '*' resolved as shift.
Conflict in state 281 between rule 203 and token '/' resolved as shift.
Conflict in state 281 between rule 203 and token '%' resolved as shift.
Conflict in state 282 between rule 206 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 282 between rule 206 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 282 between rule 206 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 206 and token '?' resolved as reduce.
Conflict in state 282 between rule 206 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 282 between rule 206 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 282 between rule 206 and token '|' resolved as reduce.
Conflict in state 282 between rule 206 and token '^' resolved as reduce.
Conflict in state 282 between rule 206 and token '&' resolved as reduce.
Conflict in state 282 between rule 206 and token T_IS_EQUAL resolved as reduce.
Conflict in state 282 between rule 206 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 282 between rule 206 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 206 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 206 and token '<' resolved as an error.
Conflict in state 282 between rule 206 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 206 and token '>' resolved as an error.
Conflict in state 282 between rule 206 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 206 and token T_SL resolved as shift.
Conflict in state 282 between rule 206 and token T_SR resolved as shift.
Conflict in state 282 between rule 206 and token '+' resolved as shift.
Conflict in state 282 between rule 206 and token '-' resolved as shift.
Conflict in state 282 between rule 206 and token '.' resolved as shift.
Conflict in state 282 between rule 206 and token '*' resolved as shift.
Conflict in state 282 between rule 206 and token '/' resolved as shift.
Conflict in state 282 between rule 206 and token '%' resolved as shift.
Conflict in state 283 between rule 207 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 283 between rule 207 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 283 between rule 207 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 283 between rule 207 and token '?' resolved as reduce.
Conflict in state 283 between rule 207 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 283 between rule 207 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 283 between rule 207 and token '|' resolved as reduce.
Conflict in state 283 between rule 207 and token '^' resolved as reduce.
Conflict in state 283 between rule 207 and token '&' resolved as reduce.
Conflict in state 283 between rule 207 and token T_IS_EQUAL resolved as reduce.
Conflict in state 283 between rule 207 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 283 between rule 207 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 207 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 207 and token '<' resolved as an error.
Conflict in state 283 between rule 207 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 207 and token '>' resolved as an error.
Conflict in state 283 between rule 207 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 207 and token T_SL resolved as shift.
Conflict in state 283 between rule 207 and token T_SR resolved as shift.
Conflict in state 283 between rule 207 and token '+' resolved as shift.
Conflict in state 283 between rule 207 and token '-' resolved as shift.
Conflict in state 283 between rule 207 and token '.' resolved as shift.
Conflict in state 283 between rule 207 and token '*' resolved as shift.
Conflict in state 283 between rule 207 and token '/' resolved as shift.
Conflict in state 283 between rule 207 and token '%' resolved as shift.
Conflict in state 284 between rule 208 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 284 between rule 208 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 284 between rule 208 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 284 between rule 208 and token '?' resolved as reduce.
Conflict in state 284 between rule 208 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 284 between rule 208 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 284 between rule 208 and token '|' resolved as reduce.
Conflict in state 284 between rule 208 and token '^' resolved as reduce.
Conflict in state 284 between rule 208 and token '&' resolved as reduce.
Conflict in state 284 between rule 208 and token T_IS_EQUAL resolved as reduce.
Conflict in state 284 between rule 208 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 284 between rule 208 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 208 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 208 and token '<' resolved as an error.
Conflict in state 284 between rule 208 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 208 and token '>' resolved as an error.
Conflict in state 284 between rule 208 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 208 and token T_SL resolved as shift.
Conflict in state 284 between rule 208 and token T_SR resolved as shift.
Conflict in state 284 between rule 208 and token '+' resolved as shift.
Conflict in state 284 between rule 208 and token '-' resolved as shift.
Conflict in state 284 between rule 208 and token '.' resolved as shift.
Conflict in state 284 between rule 208 and token '*' resolved as shift.
Conflict in state 284 between rule 208 and token '/' resolved as shift.
Conflict in state 284 between rule 208 and token '%' resolved as shift.
Conflict in state 285 between rule 209 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 285 between rule 209 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 285 between rule 209 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 285 between rule 209 and token '?' resolved as reduce.
Conflict in state 285 between rule 209 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 285 between rule 209 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 285 between rule 209 and token '|' resolved as reduce.
Conflict in state 285 between rule 209 and token '^' resolved as reduce.
Conflict in state 285 between rule 209 and token '&' resolved as reduce.
Conflict in state 285 between rule 209 and token T_IS_EQUAL resolved as reduce.
Conflict in state 285 between rule 209 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 285 between rule 209 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 209 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 209 and token '<' resolved as an error.
Conflict in state 285 between rule 209 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 285 between rule 209 and token '>' resolved as an error.
Conflict in state 285 between rule 209 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 285 between rule 209 and token T_SL resolved as shift.
Conflict in state 285 between rule 209 and token T_SR resolved as shift.
Conflict in state 285 between rule 209 and token '+' resolved as shift.
Conflict in state 285 between rule 209 and token '-' resolved as shift.
Conflict in state 285 between rule 209 and token '.' resolved as shift.
Conflict in state 285 between rule 209 and token '*' resolved as shift.
Conflict in state 285 between rule 209 and token '/' resolved as shift.
Conflict in state 285 between rule 209 and token '%' resolved as shift.
Conflict in state 286 between rule 196 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 286 between rule 196 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 286 between rule 196 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 286 between rule 196 and token '?' resolved as reduce.
Conflict in state 286 between rule 196 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 286 between rule 196 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 286 between rule 196 and token '|' resolved as reduce.
Conflict in state 286 between rule 196 and token '^' resolved as reduce.
Conflict in state 286 between rule 196 and token '&' resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_EQUAL resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 196 and token '<' resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 196 and token '>' resolved as reduce.
Conflict in state 286 between rule 196 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 196 and token T_SL resolved as reduce.
Conflict in state 286 between rule 196 and token T_SR resolved as reduce.
Conflict in state 286 between rule 196 and token '+' resolved as shift.
Conflict in state 286 between rule 196 and token '-' resolved as shift.
Conflict in state 286 between rule 196 and token '.' resolved as shift.
Conflict in state 286 between rule 196 and token '*' resolved as shift.
Conflict in state 286 between rule 196 and token '/' resolved as shift.
Conflict in state 286 between rule 196 and token '%' resolved as shift.
Conflict in state 287 between rule 197 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 287 between rule 197 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 287 between rule 197 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 287 between rule 197 and token '?' resolved as reduce.
Conflict in state 287 between rule 197 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 287 between rule 197 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 287 between rule 197 and token '|' resolved as reduce.
Conflict in state 287 between rule 197 and token '^' resolved as reduce.
Conflict in state 287 between rule 197 and token '&' resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_EQUAL resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 197 and token '<' resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 197 and token '>' resolved as reduce.
Conflict in state 287 between rule 197 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 197 and token T_SL resolved as reduce.
Conflict in state 287 between rule 197 and token T_SR resolved as reduce.
Conflict in state 287 between rule 197 and token '+' resolved as shift.
Conflict in state 287 between rule 197 and token '-' resolved as shift.
Conflict in state 287 between rule 197 and token '.' resolved as shift.
Conflict in state 287 between rule 197 and token '*' resolved as shift.
Conflict in state 287 between rule 197 and token '/' resolved as shift.
Conflict in state 287 between rule 197 and token '%' resolved as shift.
Conflict in state 288 between rule 191 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 288 between rule 191 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 288 between rule 191 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 191 and token '?' resolved as reduce.
Conflict in state 288 between rule 191 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 288 between rule 191 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 288 between rule 191 and token '|' resolved as reduce.
Conflict in state 288 between rule 191 and token '^' resolved as reduce.
Conflict in state 288 between rule 191 and token '&' resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_EQUAL resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 191 and token '<' resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 191 and token '>' resolved as reduce.
Conflict in state 288 between rule 191 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 191 and token T_SL resolved as reduce.
Conflict in state 288 between rule 191 and token T_SR resolved as reduce.
Conflict in state 288 between rule 191 and token '+' resolved as reduce.
Conflict in state 288 between rule 191 and token '-' resolved as reduce.
Conflict in state 288 between rule 191 and token '.' resolved as reduce.
Conflict in state 288 between rule 191 and token '*' resolved as shift.
Conflict in state 288 between rule 191 and token '/' resolved as shift.
Conflict in state 288 between rule 191 and token '%' resolved as shift.
Conflict in state 289 between rule 192 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 289 between rule 192 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 289 between rule 192 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 289 between rule 192 and token '?' resolved as reduce.
Conflict in state 289 between rule 192 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 289 between rule 192 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 289 between rule 192 and token '|' resolved as reduce.
Conflict in state 289 between rule 192 and token '^' resolved as reduce.
Conflict in state 289 between rule 192 and token '&' resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_EQUAL resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 192 and token '<' resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 192 and token '>' resolved as reduce.
Conflict in state 289 between rule 192 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 192 and token T_SL resolved as reduce.
Conflict in state 289 between rule 192 and token T_SR resolved as reduce.
Conflict in state 289 between rule 192 and token '+' resolved as reduce.
Conflict in state 289 between rule 192 and token '-' resolved as reduce.
Conflict in state 289 between rule 192 and token '.' resolved as reduce.
Conflict in state 289 between rule 192 and token '*' resolved as shift.
Conflict in state 289 between rule 192 and token '/' resolved as shift.
Conflict in state 289 between rule 192 and token '%' resolved as shift.
Conflict in state 290 between rule 190 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 290 between rule 190 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 290 between rule 190 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 290 between rule 190 and token '?' resolved as reduce.
Conflict in state 290 between rule 190 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 290 between rule 190 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 290 between rule 190 and token '|' resolved as reduce.
Conflict in state 290 between rule 190 and token '^' resolved as reduce.
Conflict in state 290 between rule 190 and token '&' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 190 and token '<' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token '>' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_SL resolved as reduce.
Conflict in state 290 between rule 190 and token T_SR resolved as reduce.
Conflict in state 290 between rule 190 and token '+' resolved as reduce.
Conflict in state 290 between rule 190 and token '-' resolved as reduce.
Conflict in state 290 between rule 190 and token '.' resolved as reduce.
Conflict in state 290 between rule 190 and token '*' resolved as shift.
Conflict in state 290 between rule 190 and token '/' resolved as shift.
Conflict in state 290 between rule 190 and token '%' resolved as shift.
Conflict in state 291 between rule 193 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 291 between rule 193 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 291 between rule 193 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 193 and token '?' resolved as reduce.
Conflict in state 291 between rule 193 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 291 between rule 193 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 291 between rule 193 and token '|' resolved as reduce.
Conflict in state 291 between rule 193 and token '^' resolved as reduce.
Conflict in state 291 between rule 193 and token '&' resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_EQUAL resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 193 and token '<' resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 193 and token '>' resolved as reduce.
Conflict in state 291 between rule 193 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 193 and token T_SL resolved as reduce.
Conflict in state 291 between rule 193 and token T_SR resolved as reduce.
Conflict in state 291 between rule 193 and token '+' resolved as reduce.
Conflict in state 291 between rule 193 and token '-' resolved as reduce.
Conflict in state 291 between rule 193 and token '.' resolved as reduce.
Conflict in state 291 between rule 193 and token '*' resolved as reduce.
Conflict in state 291 between rule 193 and token '/' resolved as reduce.
Conflict in state 291 between rule 193 and token '%' resolved as reduce.
Conflict in state 292 between rule 194 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 292 between rule 194 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 292 between rule 194 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 292 between rule 194 and token '?' resolved as reduce.
Conflict in state 292 between rule 194 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 292 between rule 194 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 292 between rule 194 and token '|' resolved as reduce.
Conflict in state 292 between rule 194 and token '^' resolved as reduce.
Conflict in state 292 between rule 194 and token '&' resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_EQUAL resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 194 and token '<' resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 194 and token '>' resolved as reduce.
Conflict in state 292 between rule 194 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 194 and token T_SL resolved as reduce.
Conflict in state 292 between rule 194 and token T_SR resolved as reduce.
Conflict in state 292 between rule 194 and token '+' resolved as reduce.
Conflict in state 292 between rule 194 and token '-' resolved as reduce.
Conflict in state 292 between rule 194 and token '.' resolved as reduce.
Conflict in state 292 between rule 194 and token '*' resolved as reduce.
Conflict in state 292 between rule 194 and token '/' resolved as reduce.
Conflict in state 292 between rule 194 and token '%' resolved as reduce.
Conflict in state 293 between rule 195 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 293 between rule 195 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 293 between rule 195 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 293 between rule 195 and token '?' resolved as reduce.
Conflict in state 293 between rule 195 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 293 between rule 195 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 293 between rule 195 and token '|' resolved as reduce.
Conflict in state 293 between rule 195 and token '^' resolved as reduce.
Conflict in state 293 between rule 195 and token '&' resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_EQUAL resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 293 between rule 195 and token '<' resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 293 between rule 195 and token '>' resolved as reduce.
Conflict in state 293 between rule 195 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 293 between rule 195 and token T_SL resolved as reduce.
Conflict in state 293 between rule 195 and token T_SR resolved as reduce.
Conflict in state 293 between rule 195 and token '+' resolved as reduce.
Conflict in state 293 between rule 195 and token '-' resolved as reduce.
Conflict in state 293 between rule 195 and token '.' resolved as reduce.
Conflict in state 293 between rule 195 and token '*' resolved as reduce.
Conflict in state 293 between rule 195 and token '/' resolved as reduce.
Conflict in state 293 between rule 195 and token '%' resolved as reduce.
Conflict in state 295 between rule 156 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 295 between rule 156 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 295 between rule 156 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 295 between rule 156 and token '?' resolved as shift.
Conflict in state 295 between rule 156 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 295 between rule 156 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 295 between rule 156 and token '|' resolved as shift.
Conflict in state 295 between rule 156 and token '^' resolved as shift.
Conflict in state 295 between rule 156 and token '&' resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_EQUAL resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 295 between rule 156 and token '<' resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 156 and token '>' resolved as shift.
Conflict in state 295 between rule 156 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 156 and token T_SL resolved as shift.
Conflict in state 295 between rule 156 and token T_SR resolved as shift.
Conflict in state 295 between rule 156 and token '+' resolved as shift.
Conflict in state 295 between rule 156 and token '-' resolved as shift.
Conflict in state 295 between rule 156 and token '.' resolved as shift.
Conflict in state 295 between rule 156 and token '*' resolved as shift.
Conflict in state 295 between rule 156 and token '/' resolved as shift.
Conflict in state 295 between rule 156 and token '%' resolved as shift.
Conflict in state 296 between rule 163 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 296 between rule 163 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 296 between rule 163 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 163 and token '?' resolved as shift.
Conflict in state 296 between rule 163 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 296 between rule 163 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 296 between rule 163 and token '|' resolved as shift.
Conflict in state 296 between rule 163 and token '^' resolved as shift.
Conflict in state 296 between rule 163 and token '&' resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_EQUAL resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 296 between rule 163 and token '<' resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 163 and token '>' resolved as shift.
Conflict in state 296 between rule 163 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 163 and token T_SL resolved as shift.
Conflict in state 296 between rule 163 and token T_SR resolved as shift.
Conflict in state 296 between rule 163 and token '+' resolved as shift.
Conflict in state 296 between rule 163 and token '-' resolved as shift.
Conflict in state 296 between rule 163 and token '.' resolved as shift.
Conflict in state 296 between rule 163 and token '*' resolved as shift.
Conflict in state 296 between rule 163 and token '/' resolved as shift.
Conflict in state 296 between rule 163 and token '%' resolved as shift.
Conflict in state 297 between rule 164 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 297 between rule 164 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 297 between rule 164 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 164 and token '?' resolved as shift.
Conflict in state 297 between rule 164 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 297 between rule 164 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 297 between rule 164 and token '|' resolved as shift.
Conflict in state 297 between rule 164 and token '^' resolved as shift.
Conflict in state 297 between rule 164 and token '&' resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_EQUAL resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 297 between rule 164 and token '<' resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 164 and token '>' resolved as shift.
Conflict in state 297 between rule 164 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 164 and token T_SL resolved as shift.
Conflict in state 297 between rule 164 and token T_SR resolved as shift.
Conflict in state 297 between rule 164 and token '+' resolved as shift.
Conflict in state 297 between rule 164 and token '-' resolved as shift.
Conflict in state 297 between rule 164 and token '.' resolved as shift.
Conflict in state 297 between rule 164 and token '*' resolved as shift.
Conflict in state 297 between rule 164 and token '/' resolved as shift.
Conflict in state 297 between rule 164 and token '%' resolved as shift.
Conflict in state 298 between rule 165 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 298 between rule 165 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 298 between rule 165 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 298 between rule 165 and token '?' resolved as shift.
Conflict in state 298 between rule 165 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 298 between rule 165 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 298 between rule 165 and token '|' resolved as shift.
Conflict in state 298 between rule 165 and token '^' resolved as shift.
Conflict in state 298 between rule 165 and token '&' resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_EQUAL resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 298 between rule 165 and token '<' resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 165 and token '>' resolved as shift.
Conflict in state 298 between rule 165 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 165 and token T_SL resolved as shift.
Conflict in state 298 between rule 165 and token T_SR resolved as shift.
Conflict in state 298 between rule 165 and token '+' resolved as shift.
Conflict in state 298 between rule 165 and token '-' resolved as shift.
Conflict in state 298 between rule 165 and token '.' resolved as shift.
Conflict in state 298 between rule 165 and token '*' resolved as shift.
Conflict in state 298 between rule 165 and token '/' resolved as shift.
Conflict in state 298 between rule 165 and token '%' resolved as shift.
Conflict in state 299 between rule 166 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 299 between rule 166 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 299 between rule 166 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 299 between rule 166 and token '?' resolved as shift.
Conflict in state 299 between rule 166 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 299 between rule 166 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 299 between rule 166 and token '|' resolved as shift.
Conflict in state 299 between rule 166 and token '^' resolved as shift.
Conflict in state 299 between rule 166 and token '&' resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_EQUAL resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 299 between rule 166 and token '<' resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 166 and token '>' resolved as shift.
Conflict in state 299 between rule 166 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 166 and token T_SL resolved as shift.
Conflict in state 299 between rule 166 and token T_SR resolved as shift.
Conflict in state 299 between rule 166 and token '+' resolved as shift.
Conflict in state 299 between rule 166 and token '-' resolved as shift.
Conflict in state 299 between rule 166 and token '.' resolved as shift.
Conflict in state 299 between rule 166 and token '*' resolved as shift.
Conflict in state 299 between rule 166 and token '/' resolved as shift.
Conflict in state 299 between rule 166 and token '%' resolved as shift.
Conflict in state 300 between rule 167 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 300 between rule 167 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 300 between rule 167 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 300 between rule 167 and token '?' resolved as shift.
Conflict in state 300 between rule 167 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 300 between rule 167 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 300 between rule 167 and token '|' resolved as shift.
Conflict in state 300 between rule 167 and token '^' resolved as shift.
Conflict in state 300 between rule 167 and token '&' resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_EQUAL resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 300 between rule 167 and token '<' resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 167 and token '>' resolved as shift.
Conflict in state 300 between rule 167 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 167 and token T_SL resolved as shift.
Conflict in state 300 between rule 167 and token T_SR resolved as shift.
Conflict in state 300 between rule 167 and token '+' resolved as shift.
Conflict in state 300 between rule 167 and token '-' resolved as shift.
Conflict in state 300 between rule 167 and token '.' resolved as shift.
Conflict in state 300 between rule 167 and token '*' resolved as shift.
Conflict in state 300 between rule 167 and token '/' resolved as shift.
Conflict in state 300 between rule 167 and token '%' resolved as shift.
Conflict in state 301 between rule 168 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 301 between rule 168 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 301 between rule 168 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 301 between rule 168 and token '?' resolved as shift.
Conflict in state 301 between rule 168 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 301 between rule 168 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 301 between rule 168 and token '|' resolved as shift.
Conflict in state 301 between rule 168 and token '^' resolved as shift.
Conflict in state 301 between rule 168 and token '&' resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_EQUAL resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 301 between rule 168 and token '<' resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 168 and token '>' resolved as shift.
Conflict in state 301 between rule 168 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 168 and token T_SL resolved as shift.
Conflict in state 301 between rule 168 and token T_SR resolved as shift.
Conflict in state 301 between rule 168 and token '+' resolved as shift.
Conflict in state 301 between rule 168 and token '-' resolved as shift.
Conflict in state 301 between rule 168 and token '.' resolved as shift.
Conflict in state 301 between rule 168 and token '*' resolved as shift.
Conflict in state 301 between rule 168 and token '/' resolved as shift.
Conflict in state 301 between rule 168 and token '%' resolved as shift.
Conflict in state 302 between rule 169 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 169 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 302 between rule 169 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 169 and token '?' resolved as shift.
Conflict in state 302 between rule 169 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 302 between rule 169 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 302 between rule 169 and token '|' resolved as shift.
Conflict in state 302 between rule 169 and token '^' resolved as shift.
Conflict in state 302 between rule 169 and token '&' resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_EQUAL resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 302 between rule 169 and token '<' resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 169 and token '>' resolved as shift.
Conflict in state 302 between rule 169 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 169 and token T_SL resolved as shift.
Conflict in state 302 between rule 169 and token T_SR resolved as shift.
Conflict in state 302 between rule 169 and token '+' resolved as shift.
Conflict in state 302 between rule 169 and token '-' resolved as shift.
Conflict in state 302 between rule 169 and token '.' resolved as shift.
Conflict in state 302 between rule 169 and token '*' resolved as shift.
Conflict in state 302 between rule 169 and token '/' resolved as shift.
Conflict in state 302 between rule 169 and token '%' resolved as shift.
Conflict in state 303 between rule 170 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 303 between rule 170 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 303 between rule 170 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 303 between rule 170 and token '?' resolved as shift.
Conflict in state 303 between rule 170 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 303 between rule 170 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 303 between rule 170 and token '|' resolved as shift.
Conflict in state 303 between rule 170 and token '^' resolved as shift.
Conflict in state 303 between rule 170 and token '&' resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_EQUAL resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 303 between rule 170 and token '<' resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 170 and token '>' resolved as shift.
Conflict in state 303 between rule 170 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 170 and token T_SL resolved as shift.
Conflict in state 303 between rule 170 and token T_SR resolved as shift.
Conflict in state 303 between rule 170 and token '+' resolved as shift.
Conflict in state 303 between rule 170 and token '-' resolved as shift.
Conflict in state 303 between rule 170 and token '.' resolved as shift.
Conflict in state 303 between rule 170 and token '*' resolved as shift.
Conflict in state 303 between rule 170 and token '/' resolved as shift.
Conflict in state 303 between rule 170 and token '%' resolved as shift.
Conflict in state 304 between rule 171 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 304 between rule 171 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 304 between rule 171 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 304 between rule 171 and token '?' resolved as shift.
Conflict in state 304 between rule 171 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 304 between rule 171 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 304 between rule 171 and token '|' resolved as shift.
Conflict in state 304 between rule 171 and token '^' resolved as shift.
Conflict in state 304 between rule 171 and token '&' resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_EQUAL resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 304 between rule 171 and token '<' resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 171 and token '>' resolved as shift.
Conflict in state 304 between rule 171 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 171 and token T_SL resolved as shift.
Conflict in state 304 between rule 171 and token T_SR resolved as shift.
Conflict in state 304 between rule 171 and token '+' resolved as shift.
Conflict in state 304 between rule 171 and token '-' resolved as shift.
Conflict in state 304 between rule 171 and token '.' resolved as shift.
Conflict in state 304 between rule 171 and token '*' resolved as shift.
Conflict in state 304 between rule 171 and token '/' resolved as shift.
Conflict in state 304 between rule 171 and token '%' resolved as shift.
Conflict in state 305 between rule 172 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 305 between rule 172 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 305 between rule 172 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 172 and token '?' resolved as shift.
Conflict in state 305 between rule 172 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 305 between rule 172 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 305 between rule 172 and token '|' resolved as shift.
Conflict in state 305 between rule 172 and token '^' resolved as shift.
Conflict in state 305 between rule 172 and token '&' resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_EQUAL resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 305 between rule 172 and token '<' resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 172 and token '>' resolved as shift.
Conflict in state 305 between rule 172 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 172 and token T_SL resolved as shift.
Conflict in state 305 between rule 172 and token T_SR resolved as shift.
Conflict in state 305 between rule 172 and token '+' resolved as shift.
Conflict in state 305 between rule 172 and token '-' resolved as shift.
Conflict in state 305 between rule 172 and token '.' resolved as shift.
Conflict in state 305 between rule 172 and token '*' resolved as shift.
Conflict in state 305 between rule 172 and token '/' resolved as shift.
Conflict in state 305 between rule 172 and token '%' resolved as shift.
Conflict in state 306 between rule 173 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 306 between rule 173 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 306 between rule 173 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 173 and token '?' resolved as shift.
Conflict in state 306 between rule 173 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 306 between rule 173 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 306 between rule 173 and token '|' resolved as shift.
Conflict in state 306 between rule 173 and token '^' resolved as shift.
Conflict in state 306 between rule 173 and token '&' resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_EQUAL resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 306 between rule 173 and token '<' resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 306 between rule 173 and token '>' resolved as shift.
Conflict in state 306 between rule 173 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 306 between rule 173 and token T_SL resolved as shift.
Conflict in state 306 between rule 173 and token T_SR resolved as shift.
Conflict in state 306 between rule 173 and token '+' resolved as shift.
Conflict in state 306 between rule 173 and token '-' resolved as shift.
Conflict in state 306 between rule 173 and token '.' resolved as shift.
Conflict in state 306 between rule 173 and token '*' resolved as shift.
Conflict in state 306 between rule 173 and token '/' resolved as shift.
Conflict in state 306 between rule 173 and token '%' resolved as shift.
Conflict in state 371 between rule 183 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 371 between rule 183 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 371 between rule 183 and token T_LOGICAL_AND resolved as shift.
Conflict in state 371 between rule 183 and token '?' resolved as shift.
Conflict in state 371 between rule 183 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 371 between rule 183 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 371 between rule 183 and token '|' resolved as shift.
Conflict in state 371 between rule 183 and token '^' resolved as shift.
Conflict in state 371 between rule 183 and token '&' resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_EQUAL resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 371 between rule 183 and token '<' resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 371 between rule 183 and token '>' resolved as shift.
Conflict in state 371 between rule 183 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 371 between rule 183 and token T_SL resolved as shift.
Conflict in state 371 between rule 183 and token T_SR resolved as shift.
Conflict in state 371 between rule 183 and token '+' resolved as shift.
Conflict in state 371 between rule 183 and token '-' resolved as shift.
Conflict in state 371 between rule 183 and token '.' resolved as shift.
Conflict in state 371 between rule 183 and token '*' resolved as shift.
Conflict in state 371 between rule 183 and token '/' resolved as shift.
Conflict in state 371 between rule 183 and token '%' resolved as shift.
Conflict in state 372 between rule 185 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 372 between rule 185 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 372 between rule 185 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 372 between rule 185 and token '?' resolved as shift.
Conflict in state 372 between rule 185 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 372 between rule 185 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 372 between rule 185 and token '|' resolved as shift.
Conflict in state 372 between rule 185 and token '^' resolved as shift.
Conflict in state 372 between rule 185 and token '&' resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_EQUAL resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 372 between rule 185 and token '<' resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 185 and token '>' resolved as shift.
Conflict in state 372 between rule 185 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 185 and token T_SL resolved as shift.
Conflict in state 372 between rule 185 and token T_SR resolved as shift.
Conflict in state 372 between rule 185 and token '+' resolved as shift.
Conflict in state 372 between rule 185 and token '-' resolved as shift.
Conflict in state 372 between rule 185 and token '.' resolved as shift.
Conflict in state 372 between rule 185 and token '*' resolved as shift.
Conflict in state 372 between rule 185 and token '/' resolved as shift.
Conflict in state 372 between rule 185 and token '%' resolved as shift.
Conflict in state 374 between rule 179 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 374 between rule 179 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 374 between rule 179 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 374 between rule 179 and token '?' resolved as reduce.
Conflict in state 374 between rule 179 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 374 between rule 179 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 374 between rule 179 and token '|' resolved as shift.
Conflict in state 374 between rule 179 and token '^' resolved as shift.
Conflict in state 374 between rule 179 and token '&' resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_EQUAL resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 374 between rule 179 and token '<' resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 374 between rule 179 and token '>' resolved as shift.
Conflict in state 374 between rule 179 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 374 between rule 179 and token T_SL resolved as shift.
Conflict in state 374 between rule 179 and token T_SR resolved as shift.
Conflict in state 374 between rule 179 and token '+' resolved as shift.
Conflict in state 374 between rule 179 and token '-' resolved as shift.
Conflict in state 374 between rule 179 and token '.' resolved as shift.
Conflict in state 374 between rule 179 and token '*' resolved as shift.
Conflict in state 374 between rule 179 and token '/' resolved as shift.
Conflict in state 374 between rule 179 and token '%' resolved as shift.
Conflict in state 375 between rule 181 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 375 between rule 181 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 375 between rule 181 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 375 between rule 181 and token '?' resolved as reduce.
Conflict in state 375 between rule 181 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 375 between rule 181 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 375 between rule 181 and token '|' resolved as shift.
Conflict in state 375 between rule 181 and token '^' resolved as shift.
Conflict in state 375 between rule 181 and token '&' resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_EQUAL resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 375 between rule 181 and token '<' resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 375 between rule 181 and token '>' resolved as shift.
Conflict in state 375 between rule 181 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 375 between rule 181 and token T_SL resolved as shift.
Conflict in state 375 between rule 181 and token T_SR resolved as shift.
Conflict in state 375 between rule 181 and token '+' resolved as shift.
Conflict in state 375 between rule 181 and token '-' resolved as shift.
Conflict in state 375 between rule 181 and token '.' resolved as shift.
Conflict in state 375 between rule 181 and token '*' resolved as shift.
Conflict in state 375 between rule 181 and token '/' resolved as shift.
Conflict in state 375 between rule 181 and token '%' resolved as shift.
Conflict in state 529 between rule 155 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 529 between rule 155 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 529 between rule 155 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 529 between rule 155 and token '?' resolved as shift.
Conflict in state 529 between rule 155 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 529 between rule 155 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 529 between rule 155 and token '|' resolved as shift.
Conflict in state 529 between rule 155 and token '^' resolved as shift.
Conflict in state 529 between rule 155 and token '&' resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_EQUAL resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 529 between rule 155 and token '<' resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 529 between rule 155 and token '>' resolved as shift.
Conflict in state 529 between rule 155 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 529 between rule 155 and token T_SL resolved as shift.
Conflict in state 529 between rule 155 and token T_SR resolved as shift.
Conflict in state 529 between rule 155 and token '+' resolved as shift.
Conflict in state 529 between rule 155 and token '-' resolved as shift.
Conflict in state 529 between rule 155 and token '.' resolved as shift.
Conflict in state 529 between rule 155 and token '*' resolved as shift.
Conflict in state 529 between rule 155 and token '/' resolved as shift.
Conflict in state 529 between rule 155 and token '%' resolved as shift.
Conflict in state 534 between rule 213 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 534 between rule 213 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 534 between rule 213 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 534 between rule 213 and token '?' resolved as reduce.
Conflict in state 534 between rule 213 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 534 between rule 213 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 534 between rule 213 and token '|' resolved as shift.
Conflict in state 534 between rule 213 and token '^' resolved as shift.
Conflict in state 534 between rule 213 and token '&' resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_EQUAL resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 534 between rule 213 and token '<' resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 534 between rule 213 and token '>' resolved as shift.
Conflict in state 534 between rule 213 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 534 between rule 213 and token T_SL resolved as shift.
Conflict in state 534 between rule 213 and token T_SR resolved as shift.
Conflict in state 534 between rule 213 and token '+' resolved as shift.
Conflict in state 534 between rule 213 and token '-' resolved as shift.
Conflict in state 534 between rule 213 and token '.' resolved as shift.
Conflict in state 534 between rule 213 and token '*' resolved as shift.
Conflict in state 534 between rule 213 and token '/' resolved as shift.
Conflict in state 534 between rule 213 and token '%' resolved as shift.
State 249 contains 2 shift/reduce conflicts.
State 540 contains 2 shift/reduce conflicts.

Grammar
rule 1    start -> top_statement_list
rule 2    @1 ->		/* empty */
rule 3    top_statement_list -> top_statement_list @1 top_statement
rule 4    top_statement_list ->		/* empty */
rule 5    top_statement -> statement
rule 6    top_statement -> declaration_statement
rule 7    @2 ->		/* empty */
rule 8    inner_statement_list -> inner_statement_list @2 inner_statement
rule 9    inner_statement_list ->		/* empty */
rule 10   inner_statement -> statement
rule 11   inner_statement -> declaration_statement
rule 12   statement -> unticked_statement
rule 13   unticked_statement -> '{' inner_statement_list '}'
rule 14   @3 ->		/* empty */
rule 15   @4 ->		/* empty */
rule 16   unticked_statement -> T_IF '(' expr ')' @3 statement @4 elseif_list else_single
rule 17   @5 ->		/* empty */
rule 18   @6 ->		/* empty */
rule 19   unticked_statement -> T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'
rule 20   @7 ->		/* empty */
rule 21   @8 ->		/* empty */
rule 22   unticked_statement -> T_WHILE '(' @7 expr ')' @8 while_statement
rule 23   @9 ->		/* empty */
rule 24   @10 ->		/* empty */
rule 25   unticked_statement -> T_DO @9 statement T_WHILE '(' @10 expr ')' ';'
rule 26   @11 ->		/* empty */
rule 27   @12 ->		/* empty */
rule 28   @13 ->		/* empty */
rule 29   unticked_statement -> T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement
rule 30   @14 ->		/* empty */
rule 31   unticked_statement -> T_SWITCH '(' expr ')' @14 switch_case_list
rule 32   unticked_statement -> T_BREAK ';'
rule 33   unticked_statement -> T_BREAK expr ';'
rule 34   unticked_statement -> T_CONTINUE ';'
rule 35   unticked_statement -> T_CONTINUE expr ';'
rule 36   unticked_statement -> T_RETURN ';'
rule 37   unticked_statement -> T_RETURN expr_without_variable ';'
rule 38   unticked_statement -> T_RETURN cvar ';'
rule 39   unticked_statement -> T_GLOBAL global_var_list ';'
rule 40   unticked_statement -> T_STATIC static_var_list ';'
rule 41   unticked_statement -> T_ECHO echo_expr_list ';'
rule 42   unticked_statement -> T_INLINE_HTML
rule 43   unticked_statement -> expr ';'
rule 44   unticked_statement -> T_USE use_filename ';'
rule 45   unticked_statement -> T_UNSET '(' unset_variables ')' ';'
rule 46   @15 ->		/* empty */
rule 47   @16 ->		/* empty */
rule 48   unticked_statement -> T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement
rule 49   @17 ->		/* empty */
rule 50   @18 ->		/* empty */
rule 51   unticked_statement -> T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement
rule 52   @19 ->		/* empty */
rule 53   unticked_statement -> T_DECLARE @19 '(' declare_list ')' declare_statement
rule 54   unticked_statement -> ';'
rule 55   unset_variables -> unset_variable
rule 56   unset_variables -> unset_variables ',' unset_variable
rule 57   unset_variable -> cvar
rule 58   use_filename -> T_CONSTANT_ENCAPSED_STRING
rule 59   use_filename -> '(' T_CONSTANT_ENCAPSED_STRING ')'
rule 60   declaration_statement -> unticked_declaration_statement
rule 61   @20 ->		/* empty */
rule 62   @21 ->		/* empty */
rule 63   unticked_declaration_statement -> T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'
rule 64   @22 ->		/* empty */
rule 65   @23 ->		/* empty */
rule 66   unticked_declaration_statement -> T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'
rule 67   @24 ->		/* empty */
rule 68   unticked_declaration_statement -> T_CLASS T_STRING @24 '{' class_statement_list '}'
rule 69   @25 ->		/* empty */
rule 70   unticked_declaration_statement -> T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}'
rule 71   foreach_optional_arg ->		/* empty */
rule 72   foreach_optional_arg -> T_DOUBLE_ARROW w_cvar
rule 73   for_statement -> statement
rule 74   for_statement -> ':' inner_statement_list T_ENDFOR ';'
rule 75   foreach_statement -> statement
rule 76   foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';'
rule 77   declare_statement -> statement
rule 78   declare_statement -> ':' inner_statement_list T_ENDDECLARE ';'
rule 79   declare_list -> T_STRING '=' static_scalar
rule 80   declare_list -> declare_list ',' T_STRING '=' static_scalar
rule 81   switch_case_list -> '{' case_list '}'
rule 82   switch_case_list -> '{' ';' case_list '}'
rule 83   switch_case_list -> ':' case_list T_ENDSWITCH ';'
rule 84   switch_case_list -> ':' ';' case_list T_ENDSWITCH ';'
rule 85   case_list ->		/* empty */
rule 86   @26 ->		/* empty */
rule 87   case_list -> case_list T_CASE expr case_separator @26 inner_statement_list
rule 88   @27 ->		/* empty */
rule 89   case_list -> case_list T_DEFAULT case_separator @27 inner_statement_list
rule 90   case_separator -> ':'
rule 91   case_separator -> ';'
rule 92   while_statement -> statement
rule 93   while_statement -> ':' inner_statement_list T_ENDWHILE ';'
rule 94   elseif_list ->		/* empty */
rule 95   @28 ->		/* empty */
rule 96   elseif_list -> elseif_list T_ELSEIF '(' expr ')' @28 statement
rule 97   new_elseif_list ->		/* empty */
rule 98   @29 ->		/* empty */
rule 99   new_elseif_list -> new_elseif_list T_ELSEIF '(' expr ')' ':' @29 inner_statement_list
rule 100  else_single ->		/* empty */
rule 101  else_single -> T_ELSE statement
rule 102  new_else_single ->		/* empty */
rule 103  new_else_single -> T_ELSE ':' inner_statement_list
rule 104  parameter_list -> non_empty_parameter_list
rule 105  parameter_list ->		/* empty */
rule 106  non_empty_parameter_list -> T_VARIABLE
rule 107  non_empty_parameter_list -> '&' T_VARIABLE
rule 108  non_empty_parameter_list -> T_CONST T_VARIABLE
rule 109  non_empty_parameter_list -> T_VARIABLE '=' static_scalar
rule 110  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE
rule 111  non_empty_parameter_list -> non_empty_parameter_list ',' '&' T_VARIABLE
rule 112  non_empty_parameter_list -> non_empty_parameter_list ',' T_CONST T_VARIABLE
rule 113  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE '=' static_scalar
rule 114  function_call_parameter_list -> non_empty_function_call_parameter_list
rule 115  function_call_parameter_list ->		/* empty */
rule 116  non_empty_function_call_parameter_list -> expr_without_variable
rule 117  non_empty_function_call_parameter_list -> cvar
rule 118  non_empty_function_call_parameter_list -> '&' w_cvar
rule 119  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' expr_without_variable
rule 120  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' cvar
rule 121  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' '&' w_cvar
rule 122  global_var_list -> global_var_list ',' global_var
rule 123  global_var_list -> global_var
rule 124  global_var -> T_VARIABLE
rule 125  global_var -> '$' r_cvar
rule 126  global_var -> '$' '{' expr '}'
rule 127  static_var_list -> static_var_list ',' T_VARIABLE
rule 128  static_var_list -> static_var_list ',' T_VARIABLE '=' static_scalar
rule 129  static_var_list -> T_VARIABLE
rule 130  static_var_list -> T_VARIABLE '=' static_scalar
rule 131  class_statement_list -> class_statement_list class_statement
rule 132  class_statement_list ->		/* empty */
rule 133  class_statement -> T_VAR class_variable_decleration ';'
rule 134  @30 ->		/* empty */
rule 135  @31 ->		/* empty */
rule 136  class_statement -> T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'
rule 137  @32 ->		/* empty */
rule 138  @33 ->		/* empty */
rule 139  class_statement -> T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'
rule 140  is_reference ->		/* empty */
rule 141  is_reference -> '&'
rule 142  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE
rule 143  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE '=' static_scalar
rule 144  class_variable_decleration -> T_VARIABLE
rule 145  class_variable_decleration -> T_VARIABLE '=' static_scalar
rule 146  echo_expr_list ->		/* empty */
rule 147  echo_expr_list -> echo_expr_list ',' expr
rule 148  echo_expr_list -> expr
rule 149  for_expr ->		/* empty */
rule 150  for_expr -> non_empty_for_expr
rule 151  @34 ->		/* empty */
rule 152  non_empty_for_expr -> non_empty_for_expr ',' @34 expr
rule 153  non_empty_for_expr -> expr
rule 154  @35 ->		/* empty */
rule 155  expr_without_variable -> T_LIST '(' @35 assignment_list ')' '=' expr
rule 156  expr_without_variable -> cvar '=' expr
rule 157  expr_without_variable -> cvar '=' '&' w_cvar
rule 158  expr_without_variable -> cvar '=' '&' function_call
rule 159  @36 ->		/* empty */
rule 160  expr_without_variable -> cvar '=' '&' T_NEW class_name @36 ctor_arguments
rule 161  @37 ->		/* empty */
rule 162  expr_without_variable -> T_NEW class_name @37 ctor_arguments
rule 163  expr_without_variable -> cvar T_PLUS_EQUAL expr
rule 164  expr_without_variable -> cvar T_MINUS_EQUAL expr
rule 165  expr_without_variable -> cvar T_MUL_EQUAL expr
rule 166  expr_without_variable -> cvar T_DIV_EQUAL expr
rule 167  expr_without_variable -> cvar T_CONCAT_EQUAL expr
rule 168  expr_without_variable -> cvar T_MOD_EQUAL expr
rule 169  expr_without_variable -> cvar T_AND_EQUAL expr
rule 170  expr_without_variable -> cvar T_OR_EQUAL expr
rule 171  expr_without_variable -> cvar T_XOR_EQUAL expr
rule 172  expr_without_variable -> cvar T_SL_EQUAL expr
rule 173  expr_without_variable -> cvar T_SR_EQUAL expr
rule 174  expr_without_variable -> rw_cvar T_INC
rule 175  expr_without_variable -> T_INC rw_cvar
rule 176  expr_without_variable -> rw_cvar T_DEC
rule 177  expr_without_variable -> T_DEC rw_cvar
rule 178  @38 ->		/* empty */
rule 179  expr_without_variable -> expr T_BOOLEAN_OR @38 expr
rule 180  @39 ->		/* empty */
rule 181  expr_without_variable -> expr T_BOOLEAN_AND @39 expr
rule 182  @40 ->		/* empty */
rule 183  expr_without_variable -> expr T_LOGICAL_OR @40 expr
rule 184  @41 ->		/* empty */
rule 185  expr_without_variable -> expr T_LOGICAL_AND @41 expr
rule 186  expr_without_variable -> expr T_LOGICAL_XOR expr
rule 187  expr_without_variable -> expr '|' expr
rule 188  expr_without_variable -> expr '&' expr
rule 189  expr_without_variable -> expr '^' expr
rule 190  expr_without_variable -> expr '.' expr
rule 191  expr_without_variable -> expr '+' expr
rule 192  expr_without_variable -> expr '-' expr
rule 193  expr_without_variable -> expr '*' expr
rule 194  expr_without_variable -> expr '/' expr
rule 195  expr_without_variable -> expr '%' expr
rule 196  expr_without_variable -> expr T_SL expr
rule 197  expr_without_variable -> expr T_SR expr
rule 198  expr_without_variable -> '+' expr
rule 199  expr_without_variable -> '-' expr
rule 200  expr_without_variable -> '!' expr
rule 201  expr_without_variable -> '~' expr
rule 202  expr_without_variable -> expr T_IS_IDENTICAL expr
rule 203  expr_without_variable -> expr T_IS_NOT_IDENTICAL expr
rule 204  expr_without_variable -> expr T_IS_EQUAL expr
rule 205  expr_without_variable -> expr T_IS_NOT_EQUAL expr
rule 206  expr_without_variable -> expr '<' expr
rule 207  expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr
rule 208  expr_without_variable -> expr '>' expr
rule 209  expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr
rule 210  expr_without_variable -> '(' expr ')'
rule 211  @42 ->		/* empty */
rule 212  @43 ->		/* empty */
rule 213  expr_without_variable -> expr '?' @42 expr ':' @43 expr
rule 214  expr_without_variable -> function_call
rule 215  expr_without_variable -> internal_functions_in_yacc
rule 216  expr_without_variable -> T_INT_CAST expr
rule 217  expr_without_variable -> T_DOUBLE_CAST expr
rule 218  expr_without_variable -> T_STRING_CAST expr
rule 219  expr_without_variable -> T_ARRAY_CAST expr
rule 220  expr_without_variable -> T_OBJECT_CAST expr
rule 221  expr_without_variable -> T_BOOL_CAST expr
rule 222  expr_without_variable -> T_UNSET_CAST expr
rule 223  expr_without_variable -> T_EXIT exit_expr
rule 224  @44 ->		/* empty */
rule 225  expr_without_variable -> '@' @44 expr
rule 226  expr_without_variable -> scalar
rule 227  expr_without_variable -> T_ARRAY '(' array_pair_list ')'
rule 228  expr_without_variable -> '`' encaps_list '`'
rule 229  expr_without_variable -> T_PRINT expr
rule 230  @45 ->		/* empty */
rule 231  function_call -> T_STRING '(' @45 function_call_parameter_list ')'
rule 232  @46 ->		/* empty */
rule 233  function_call -> cvar '(' @46 function_call_parameter_list ')'
rule 234  @47 ->		/* empty */
rule 235  function_call -> T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 function_call_parameter_list ')'
rule 236  exit_expr ->		/* empty */
rule 237  exit_expr -> '(' ')'
rule 238  exit_expr -> '(' expr ')'
rule 239  ctor_arguments ->		/* empty */
rule 240  ctor_arguments -> '(' function_call_parameter_list ')'
rule 241  class_name -> T_STRING
rule 242  class_name -> r_cvar
rule 243  common_scalar -> T_LNUMBER
rule 244  common_scalar -> T_DNUMBER
rule 245  common_scalar -> T_CONSTANT_ENCAPSED_STRING
rule 246  common_scalar -> T_LINE
rule 247  common_scalar -> T_FILE
rule 248  static_scalar -> common_scalar
rule 249  static_scalar -> T_STRING
rule 250  static_scalar -> '+' static_scalar
rule 251  static_scalar -> '-' static_scalar
rule 252  static_scalar -> T_ARRAY '(' static_array_pair_list ')'
rule 253  scalar -> T_STRING
rule 254  scalar -> T_STRING_VARNAME
rule 255  scalar -> common_scalar
rule 256  scalar -> '\"' encaps_list '\"'
rule 257  scalar -> '\'' encaps_list '\''
rule 258  scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC
rule 259  static_array_pair_list ->		/* empty */
rule 260  static_array_pair_list -> non_empty_static_array_pair_list possible_comma
rule 261  possible_comma ->		/* empty */
rule 262  possible_comma -> ','
rule 263  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
rule 264  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar
rule 265  non_empty_static_array_pair_list -> static_scalar T_DOUBLE_ARROW static_scalar
rule 266  non_empty_static_array_pair_list -> static_scalar
rule 267  expr -> r_cvar
rule 268  expr -> expr_without_variable
rule 269  r_cvar -> cvar
rule 270  w_cvar -> cvar
rule 271  rw_cvar -> cvar
rule 272  cvar -> cvar_without_objects
rule 273  @48 ->		/* empty */
rule 274  cvar -> cvar_without_objects T_OBJECT_OPERATOR @48 ref_list
rule 275  cvar_without_objects -> reference_variable
rule 276  cvar_without_objects -> simple_indirect_reference reference_variable
rule 277  reference_variable -> reference_variable '[' dim_offset ']'
rule 278  reference_variable -> reference_variable '{' expr '}'
rule 279  reference_variable -> compound_variable
rule 280  compound_variable -> T_VARIABLE
rule 281  compound_variable -> '$' '{' expr '}'
rule 282  dim_offset ->		/* empty */
rule 283  dim_offset -> expr
rule 284  ref_list -> object_property
rule 285  @49 ->		/* empty */
rule 286  ref_list -> ref_list T_OBJECT_OPERATOR @49 object_property
rule 287  object_property -> object_dim_list
rule 288  @50 ->		/* empty */
rule 289  object_property -> cvar_without_objects @50
rule 290  object_dim_list -> object_dim_list '[' dim_offset ']'
rule 291  object_dim_list -> object_dim_list '{' expr '}'
rule 292  object_dim_list -> variable_name
rule 293  variable_name -> T_STRING
rule 294  variable_name -> '{' expr '}'
rule 295  simple_indirect_reference -> '$'
rule 296  simple_indirect_reference -> simple_indirect_reference '$'
rule 297  assignment_list -> assignment_list ',' assignment_list_element
rule 298  assignment_list -> assignment_list_element
rule 299  assignment_list_element -> cvar
rule 300  @51 ->		/* empty */
rule 301  assignment_list_element -> T_LIST '(' @51 assignment_list ')'
rule 302  assignment_list_element ->		/* empty */
rule 303  array_pair_list ->		/* empty */
rule 304  array_pair_list -> non_empty_array_pair_list possible_comma
rule 305  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
rule 306  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr
rule 307  non_empty_array_pair_list -> expr T_DOUBLE_ARROW expr
rule 308  non_empty_array_pair_list -> expr
rule 309  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar
rule 310  non_empty_array_pair_list -> non_empty_array_pair_list ',' '&' w_cvar
rule 311  non_empty_array_pair_list -> expr T_DOUBLE_ARROW '&' w_cvar
rule 312  non_empty_array_pair_list -> '&' w_cvar
rule 313  encaps_list -> encaps_list encaps_var
rule 314  encaps_list -> encaps_list T_STRING
rule 315  encaps_list -> encaps_list T_NUM_STRING
rule 316  encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE
rule 317  encaps_list -> encaps_list T_CHARACTER
rule 318  encaps_list -> encaps_list T_BAD_CHARACTER
rule 319  encaps_list -> encaps_list '['
rule 320  encaps_list -> encaps_list ']'
rule 321  encaps_list -> encaps_list '{'
rule 322  encaps_list -> encaps_list '}'
rule 323  encaps_list -> encaps_list T_OBJECT_OPERATOR
rule 324  encaps_list ->		/* empty */
rule 325  encaps_var -> T_VARIABLE
rule 326  @52 ->		/* empty */
rule 327  encaps_var -> T_VARIABLE '[' @52 encaps_var_offset ']'
rule 328  encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING
rule 329  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}'
rule 330  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
rule 331  encaps_var -> T_CURLY_OPEN cvar '}'
rule 332  encaps_var_offset -> T_STRING
rule 333  encaps_var_offset -> T_NUM_STRING
rule 334  encaps_var_offset -> T_VARIABLE
rule 335  internal_functions_in_yacc -> T_ISSET '(' isset_variables ')'
rule 336  internal_functions_in_yacc -> T_EMPTY '(' cvar ')'
rule 337  internal_functions_in_yacc -> T_INCLUDE expr
rule 338  internal_functions_in_yacc -> T_INCLUDE_ONCE expr
rule 339  internal_functions_in_yacc -> T_EVAL '(' expr ')'
rule 340  internal_functions_in_yacc -> T_REQUIRE expr
rule 341  internal_functions_in_yacc -> T_REQUIRE_ONCE expr
rule 342  isset_variables -> cvar
rule 343  @53 ->		/* empty */
rule 344  isset_variables -> isset_variables ',' @53 cvar

Terminals, with rules where they appear

$ (-1)
'!' (33) 200
'\"' (34) 256
'$' (36) 125 126 281 295 296
'%' (37) 195
'&' (38) 107 111 118 121 141 157 158 160 188 309 310 311 312
'\'' (39) 257
'(' (40) 16 19 22 25 29 31 45 48 51 53 59 63 66 96 99 136 139 155 210
    227 231 233 235 237 238 240 252 301 335 336 339
')' (41) 16 19 22 25 29 31 45 48 51 53 59 63 66 96 99 136 139 155 210
    227 231 233 235 237 238 240 252 301 335 336 339
'*' (42) 193
'+' (43) 191 198 250
',' (44) 56 80 110 111 112 113 119 120 121 122 127 128 142 143 147
    152 262 263 264 297 305 306 309 310 344
'-' (45) 192 199 251
'.' (46) 190
'/' (47) 194
':' (58) 19 74 76 78 83 84 90 93 99 103 213
';' (59) 19 25 29 32 33 34 35 36 37 38 39 40 41 43 44 45 54 66 74 76
    78 82 83 84 91 93 133 139
'<' (60) 206
'=' (61) 79 80 109 113 128 130 143 145 155 156 157 158 160
'>' (62) 208
'?' (63) 213
'@' (64) 225
'[' (91) 277 290 319 327 330
']' (93) 277 290 320 327 330
'^' (94) 189
'`' (96) 228
'{' (123) 13 63 68 70 81 82 126 136 278 281 291 294 321
'|' (124) 187
'}' (125) 13 63 68 70 81 82 126 136 278 281 291 294 322 329 330 331
'~' (126) 201
error (256)
T_INCLUDE (257) 337
T_INCLUDE_ONCE (258) 338
T_EVAL (259) 339
T_REQUIRE (260) 340
T_REQUIRE_ONCE (261) 341
T_LOGICAL_OR (262) 183
T_LOGICAL_XOR (263) 186
T_LOGICAL_AND (264) 185
T_PRINT (265) 229
T_PLUS_EQUAL (266) 163
T_MINUS_EQUAL (267) 164
T_MUL_EQUAL (268) 165
T_DIV_EQUAL (269) 166
T_CONCAT_EQUAL (270) 167
T_MOD_EQUAL (271) 168
T_AND_EQUAL (272) 169
T_OR_EQUAL (273) 170
T_XOR_EQUAL (274) 171
T_SL_EQUAL (275) 172
T_SR_EQUAL (276) 173
T_BOOLEAN_OR (277) 179
T_BOOLEAN_AND (278) 181
T_IS_EQUAL (279) 204
T_IS_NOT_EQUAL (280) 205
T_IS_IDENTICAL (281) 202
T_IS_NOT_IDENTICAL (282) 203
T_IS_SMALLER_OR_EQUAL (283) 207
T_IS_GREATER_OR_EQUAL (284) 209
T_SL (285) 196
T_SR (286) 197
T_INC (287) 174 175
T_DEC (288) 176 177
T_INT_CAST (289) 216
T_DOUBLE_CAST (290) 217
T_STRING_CAST (291) 218
T_ARRAY_CAST (292) 219
T_OBJECT_CAST (293) 220
T_BOOL_CAST (294) 221
T_UNSET_CAST (295) 222
T_NEW (296) 160 162
T_EXIT (297) 223
T_IF (298) 16 19
T_ELSEIF (299) 96 99
T_ELSE (300) 101 103
T_ENDIF (301) 19
T_LNUMBER (302) 243
T_DNUMBER (303) 244
T_STRING (304) 63 66 68 70 79 80 136 139 231 235 241 249 253 293 314
    328 332
T_STRING_VARNAME (305) 254 330
T_VARIABLE (306) 106 107 108 109 110 111 112 113 124 127 128 129 130
    142 143 144 145 280 325 327 328 334
T_NUM_STRING (307) 315 333
T_INLINE_HTML (308) 42
T_CHARACTER (309) 317
T_BAD_CHARACTER (310) 318
T_ENCAPSED_AND_WHITESPACE (311) 316
T_CONSTANT_ENCAPSED_STRING (312) 58 59 245
T_ECHO (313) 41
T_DO (314) 25
T_WHILE (315) 22 25
T_ENDWHILE (316) 93
T_FOR (317) 29
T_ENDFOR (318) 74
T_FOREACH (319) 48 51
T_ENDFOREACH (320) 76
T_DECLARE (321) 53
T_ENDDECLARE (322) 78
T_AS (323) 48 51
T_SWITCH (324) 31
T_ENDSWITCH (325) 83 84
T_CASE (326) 87
T_DEFAULT (327) 89
T_BREAK (328) 32 33
T_CONTINUE (329) 34 35
T_OLD_FUNCTION (330) 66 139
T_FUNCTION (331) 63 136
T_CONST (332) 108 112
T_RETURN (333) 36 37 38
T_USE (334) 44
T_GLOBAL (335) 39
T_STATIC (336) 40
T_VAR (337) 133
T_UNSET (338) 45
T_ISSET (339) 335
T_EMPTY (340) 336
T_CLASS (341) 68 70
T_EXTENDS (342) 70
T_OBJECT_OPERATOR (343) 274 286 323 328
T_DOUBLE_ARROW (344) 72 263 265 305 307 309 311
T_LIST (345) 155 301
T_ARRAY (346) 227 252
T_LINE (347) 246
T_FILE (348) 247
T_COMMENT (349)
T_ML_COMMENT (350)
T_OPEN_TAG (351)
T_OPEN_TAG_WITH_ECHO (352)
T_CLOSE_TAG (353)
T_WHITESPACE (354)
T_START_HEREDOC (355) 258
T_END_HEREDOC (356) 258
T_DOLLAR_OPEN_CURLY_BRACES (357) 329 330
T_CURLY_OPEN (358) 331
T_PAAMAYIM_NEKUDOTAYIM (359) 235

Nonterminals, with rules where they appear

start (135)
    on left: 1
top_statement_list (136)
    on left: 3 4, on right: 1 3
@1 (137)
    on left: 2, on right: 3
top_statement (138)
    on left: 5 6, on right: 3
inner_statement_list (139)
    on left: 8 9, on right: 8 13 19 63 66 74 76 78 87 89 93 99 103
    136 139
@2 (140)
    on left: 7, on right: 8
inner_statement (141)
    on left: 10 11, on right: 8
statement (142)
    on left: 12, on right: 5 10 16 25 73 75 77 92 96 101
unticked_statement (143)
    on left: 13 16 19 22 25 29 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 48 51 53 54, on right: 12
@3 (144)
    on left: 14, on right: 16
@4 (145)
    on left: 15, on right: 16
@5 (146)
    on left: 17, on right: 19
@6 (147)
    on left: 18, on right: 19
@7 (148)
    on left: 20, on right: 22
@8 (149)
    on left: 21, on right: 22
@9 (150)
    on left: 23, on right: 25
@10 (151)
    on left: 24, on right: 25
@11 (152)
    on left: 26, on right: 29
@12 (153)
    on left: 27, on right: 29
@13 (154)
    on left: 28, on right: 29
@14 (155)
    on left: 30, on right: 31
@15 (156)
    on left: 46, on right: 48
@16 (157)
    on left: 47, on right: 48
@17 (158)
    on left: 49, on right: 51
@18 (159)
    on left: 50, on right: 51
@19 (160)
    on left: 52, on right: 53
unset_variables (161)
    on left: 55 56, on right: 45 56
unset_variable (162)
    on left: 57, on right: 55 56
use_filename (163)
    on left: 58 59, on right: 44
declaration_statement (164)
    on left: 60, on right: 6 11
unticked_declaration_statement (165)
    on left: 63 66 68 70, on right: 60
@20 (166)
    on left: 61, on right: 63
@21 (167)
    on left: 62, on right: 63
@22 (168)
    on left: 64, on right: 66
@23 (169)
    on left: 65, on right: 66
@24 (170)
    on left: 67, on right: 68
@25 (171)
    on left: 69, on right: 70
foreach_optional_arg (172)
    on left: 71 72, on right: 48 51
for_statement (173)
    on left: 73 74, on right: 29
foreach_statement (174)
    on left: 75 76, on right: 48 51
declare_statement (175)
    on left: 77 78, on right: 53
declare_list (176)
    on left: 79 80, on right: 53 80
switch_case_list (177)
    on left: 81 82 83 84, on right: 31
case_list (178)
    on left: 85 87 89, on right: 81 82 83 84 87 89
@26 (179)
    on left: 86, on right: 87
@27 (180)
    on left: 88, on right: 89
case_separator (181)
    on left: 90 91, on right: 87 89
while_statement (182)
    on left: 92 93, on right: 22
elseif_list (183)
    on left: 94 96, on right: 16 96
@28 (184)
    on left: 95, on right: 96
new_elseif_list (185)
    on left: 97 99, on right: 19 99
@29 (186)
    on left: 98, on right: 99
else_single (187)
    on left: 100 101, on right: 16
new_else_single (188)
    on left: 102 103, on right: 19
parameter_list (189)
    on left: 104 105, on right: 63 66 136 139
non_empty_parameter_list (190)
    on left: 106 107 108 109 110 111 112 113, on right: 104 110 111
    112 113
function_call_parameter_list (191)
    on left: 114 115, on right: 231 233 235 240
non_empty_function_call_parameter_list (192)
    on left: 116 117 118 119 120 121, on right: 114 119 120 121
global_var_list (193)
    on left: 122 123, on right: 39 122
global_var (194)
    on left: 124 125 126, on right: 122 123
static_var_list (195)
    on left: 127 128 129 130, on right: 40 127 128
class_statement_list (196)
    on left: 131 132, on right: 68 70 131
class_statement (197)
    on left: 133 136 139, on right: 131
@30 (198)
    on left: 134, on right: 136
@31 (199)
    on left: 135, on right: 136
@32 (200)
    on left: 137, on right: 139
@33 (201)
    on left: 138, on right: 139
is_reference (202)
    on left: 140 141, on right: 63 66 136 139
class_variable_decleration (203)
    on left: 142 143 144 145, on right: 133 142 143
echo_expr_list (204)
    on left: 146 147 148, on right: 41 147
for_expr (205)
    on left: 149 150, on right: 29
non_empty_for_expr (206)
    on left: 152 153, on right: 150 152
@34 (207)
    on left: 151, on right: 152
expr_without_variable (208)
    on left: 155 156 157 158 160 162 163 164 165 166 167 168 169 170
    171 172 173 174 175 176 177 179 181 183 185 186 187 188 189 190
    191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
    207 208 209 210 213 214 215 216 217 218 219 220 221 222 223 225
    226 227 228 229, on right: 37 51 116 119 268
@35 (209)
    on left: 154, on right: 155
@36 (210)
    on left: 159, on right: 160
@37 (211)
    on left: 161, on right: 162
@38 (212)
    on left: 178, on right: 179
@39 (213)
    on left: 180, on right: 181
@40 (214)
    on left: 182, on right: 183
@41 (215)
    on left: 184, on right: 185
@42 (216)
    on left: 211, on right: 213
@43 (217)
    on left: 212, on right: 213
@44 (218)
    on left: 224, on right: 225
function_call (219)
    on left: 231 233 235, on right: 158 214
@45 (220)
    on left: 230, on right: 231
@46 (221)
    on left: 232, on right: 233
@47 (222)
    on left: 234, on right: 235
exit_expr (223)
    on left: 236 237 238, on right: 223
ctor_arguments (224)
    on left: 239 240, on right: 160 162
class_name (225)
    on left: 241 242, on right: 160 162
common_scalar (226)
    on left: 243 244 245 246 247, on right: 248 255
static_scalar (227)
    on left: 248 249 250 251 252, on right: 79 80 109 113 128 130 143
    145 250 251 263 264 265 266
scalar (228)
    on left: 253 254 255 256 257 258, on right: 226
static_array_pair_list (229)
    on left: 259 260, on right: 252
possible_comma (230)
    on left: 261 262, on right: 260 304
non_empty_static_array_pair_list (231)
    on left: 263 264 265 266, on right: 260 263 264
expr (232)
    on left: 267 268, on right: 16 19 22 25 31 33 35 43 87 96 99 126
    147 148 152 153 155 156 163 164 165 166 167 168 169 170 171 172
    173 179 181 183 185 186 187 188 189 190 191 192 193 194 195 196
    197 198 199 200 201 202 203 204 205 206 207 208 209 210 213 216
    217 218 219 220 221 222 225 229 238 278 281 283 291 294 305 306
    307 308 309 311 329 330 337 338 339 340 341
r_cvar (233)
    on left: 269, on right: 125 242 267
w_cvar (234)
    on left: 270, on right: 48 51 72 118 121 157 309 310 311 312
rw_cvar (235)
    on left: 271, on right: 174 175 176 177
cvar (236)
    on left: 272 274, on right: 38 57 117 120 156 157 158 160 163 164
    165 166 167 168 169 170 171 172 173 233 269 270 271 299 331 336
    342 344
@48 (237)
    on left: 273, on right: 274
cvar_without_objects (238)
    on left: 275 276, on right: 272 274 289
reference_variable (239)
    on left: 277 278 279, on right: 275 276 277 278
compound_variable (240)
    on left: 280 281, on right: 279
dim_offset (241)
    on left: 282 283, on right: 277 290
ref_list (242)
    on left: 284 286, on right: 274 286
@49 (243)
    on left: 285, on right: 286
object_property (244)
    on left: 287 289, on right: 284 286
@50 (245)
    on left: 288, on right: 289
object_dim_list (246)
    on left: 290 291 292, on right: 287 290 291
variable_name (247)
    on left: 293 294, on right: 292
simple_indirect_reference (248)
    on left: 295 296, on right: 276 296
assignment_list (249)
    on left: 297 298, on right: 155 297 301
assignment_list_element (250)
    on left: 299 301 302, on right: 297 298
@51 (251)
    on left: 300, on right: 301
array_pair_list (252)
    on left: 303 304, on right: 227
non_empty_array_pair_list (253)
    on left: 305 306 307 308 309 310 311 312, on right: 304 305 306
    309 310
encaps_list (254)
    on left: 313 314 315 316 317 318 319 320 321 322 323 324,
    on right: 228 256 257 258 313 314 315 316 317 318 319 320 321 322
    323
encaps_var (255)
    on left: 325 327 328 329 330 331, on right: 313
@52 (256)
    on left: 326, on right: 327
encaps_var_offset (257)
    on left: 332 333 334, on right: 327
internal_functions_in_yacc (258)
    on left: 335 336 337 338 339 340 341, on right: 215
isset_variables (259)
    on left: 342 344, on right: 335 344
@53 (260)
    on left: 343, on right: 344


state 0

    $default	reduce using rule 4 (top_statement_list)

    start	go to state 660
    top_statement_list	go to state 1



state 1

    start  ->  top_statement_list .   (rule 1)
    top_statement_list  ->  top_statement_list . @1 top_statement   (rule 3)

    $   	reduce using rule 1 (start)
    $default	reduce using rule 2 (@1)

    @1  	go to state 2



state 2

    top_statement_list  ->  top_statement_list @1 . top_statement   (rule 3)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_OLD_FUNCTION	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    top_statement	go to state 64
    statement	go to state 65
    unticked_statement	go to state 66
    declaration_statement	go to state 67
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 3

    internal_functions_in_yacc  ->  T_INCLUDE . expr   (rule 337)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 82
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 4

    internal_functions_in_yacc  ->  T_INCLUDE_ONCE . expr   (rule 338)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 83
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 5

    internal_functions_in_yacc  ->  T_EVAL . '(' expr ')'   (rule 339)

    '(' 	shift, and go to state 84



state 6

    internal_functions_in_yacc  ->  T_REQUIRE . expr   (rule 340)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 85
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 7

    internal_functions_in_yacc  ->  T_REQUIRE_ONCE . expr   (rule 341)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 86
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 8

    expr_without_variable  ->  T_PRINT . expr   (rule 229)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 87
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 9

    expr_without_variable  ->  '+' . expr   (rule 198)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 88
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 10

    expr_without_variable  ->  '-' . expr   (rule 199)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 89
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 11

    expr_without_variable  ->  '!' . expr   (rule 200)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 90
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 12

    expr_without_variable  ->  '~' . expr   (rule 201)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 91
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 13

    expr_without_variable  ->  T_INC . rw_cvar   (rule 175)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    rw_cvar	go to state 92
    cvar	go to state 93
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 14

    expr_without_variable  ->  T_DEC . rw_cvar   (rule 177)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    rw_cvar	go to state 94
    cvar	go to state 93
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 15

    expr_without_variable  ->  T_INT_CAST . expr   (rule 216)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 95
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 16

    expr_without_variable  ->  T_DOUBLE_CAST . expr   (rule 217)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 96
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 17

    expr_without_variable  ->  T_STRING_CAST . expr   (rule 218)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 97
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 18

    expr_without_variable  ->  T_ARRAY_CAST . expr   (rule 219)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 98
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 19

    expr_without_variable  ->  T_OBJECT_CAST . expr   (rule 220)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 99
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 20

    expr_without_variable  ->  T_BOOL_CAST . expr   (rule 221)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 100
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 21

    expr_without_variable  ->  T_UNSET_CAST . expr   (rule 222)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 101
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 22

    expr_without_variable  ->  '@' . @44 expr   (rule 225)

    $default	reduce using rule 224 (@44)

    @44 	go to state 102



state 23

    expr_without_variable  ->  T_NEW . class_name @37 ctor_arguments   (rule 162)

    T_STRING	shift, and go to state 103
    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    class_name	go to state 104
    r_cvar	go to state 105
    cvar	go to state 106
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 24

    expr_without_variable  ->  T_EXIT . exit_expr   (rule 223)

    '(' 	shift, and go to state 107

    $default	reduce using rule 236 (exit_expr)

    exit_expr	go to state 108



state 25

    unticked_statement  ->  T_IF . '(' expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF . '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    '(' 	shift, and go to state 109



state 26

    common_scalar  ->  T_LNUMBER .   (rule 243)

    $default	reduce using rule 243 (common_scalar)



state 27

    common_scalar  ->  T_DNUMBER .   (rule 244)

    $default	reduce using rule 244 (common_scalar)



state 28

    function_call  ->  T_STRING . '(' @45 function_call_parameter_list ')'   (rule 231)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 function_call_parameter_list ')'   (rule 235)
    scalar  ->  T_STRING .   (rule 253)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 110
    '(' 	shift, and go to state 111

    $default	reduce using rule 253 (scalar)



state 29

    scalar  ->  T_STRING_VARNAME .   (rule 254)

    $default	reduce using rule 254 (scalar)



state 30

    compound_variable  ->  T_VARIABLE .   (rule 280)

    $default	reduce using rule 280 (compound_variable)



state 31

    unticked_statement  ->  T_INLINE_HTML .   (rule 42)

    $default	reduce using rule 42 (unticked_statement)



state 32

    common_scalar  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 245)

    $default	reduce using rule 245 (common_scalar)



state 33

    unticked_statement  ->  T_ECHO . echo_expr_list ';'   (rule 41)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 146 (echo_expr_list)

    echo_expr_list	go to state 112
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 113
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 34

    unticked_statement  ->  T_DO . @9 statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 23 (@9)

    @9  	go to state 114



state 35

    unticked_statement  ->  T_WHILE . '(' @7 expr ')' @8 while_statement   (rule 22)

    '(' 	shift, and go to state 115



state 36

    unticked_statement  ->  T_FOR . '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    '(' 	shift, and go to state 116



state 37

    unticked_statement  ->  T_FOREACH . '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)
    unticked_statement  ->  T_FOREACH . '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    '(' 	shift, and go to state 117



state 38

    unticked_statement  ->  T_DECLARE . @19 '(' declare_list ')' declare_statement   (rule 53)

    $default	reduce using rule 52 (@19)

    @19 	go to state 118



state 39

    unticked_statement  ->  T_SWITCH . '(' expr ')' @14 switch_case_list   (rule 31)

    '(' 	shift, and go to state 119



state 40

    unticked_statement  ->  T_BREAK . ';'   (rule 32)
    unticked_statement  ->  T_BREAK . expr ';'   (rule 33)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 120
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 121
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 41

    unticked_statement  ->  T_CONTINUE . ';'   (rule 34)
    unticked_statement  ->  T_CONTINUE . expr ';'   (rule 35)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 122
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 123
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 42

    unticked_declaration_statement  ->  T_OLD_FUNCTION . @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 64 (@22)

    @22 	go to state 124



state 43

    unticked_declaration_statement  ->  T_FUNCTION . @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    $default	reduce using rule 61 (@20)

    @20 	go to state 125



state 44

    unticked_statement  ->  T_RETURN . ';'   (rule 36)
    unticked_statement  ->  T_RETURN . expr_without_variable ';'   (rule 37)
    unticked_statement  ->  T_RETURN . cvar ';'   (rule 38)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 126
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 127
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 129
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 45

    unticked_statement  ->  T_USE . use_filename ';'   (rule 44)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 130
    '(' 	shift, and go to state 131

    use_filename	go to state 132



state 46

    unticked_statement  ->  T_GLOBAL . global_var_list ';'   (rule 39)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var_list	go to state 135
    global_var	go to state 136



state 47

    unticked_statement  ->  T_STATIC . static_var_list ';'   (rule 40)

    T_VARIABLE	shift, and go to state 137

    static_var_list	go to state 138



state 48

    unticked_statement  ->  T_UNSET . '(' unset_variables ')' ';'   (rule 45)

    '(' 	shift, and go to state 139



state 49

    internal_functions_in_yacc  ->  T_ISSET . '(' isset_variables ')'   (rule 335)

    '(' 	shift, and go to state 140



state 50

    internal_functions_in_yacc  ->  T_EMPTY . '(' cvar ')'   (rule 336)

    '(' 	shift, and go to state 141



state 51

    unticked_declaration_statement  ->  T_CLASS . T_STRING @24 '{' class_statement_list '}'   (rule 68)
    unticked_declaration_statement  ->  T_CLASS . T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_STRING	shift, and go to state 142



state 52

    expr_without_variable  ->  T_LIST . '(' @35 assignment_list ')' '=' expr   (rule 155)

    '(' 	shift, and go to state 143



state 53

    expr_without_variable  ->  T_ARRAY . '(' array_pair_list ')'   (rule 227)

    '(' 	shift, and go to state 144



state 54

    common_scalar  ->  T_LINE .   (rule 246)

    $default	reduce using rule 246 (common_scalar)



state 55

    common_scalar  ->  T_FILE .   (rule 247)

    $default	reduce using rule 247 (common_scalar)



state 56

    scalar  ->  T_START_HEREDOC . encaps_list T_END_HEREDOC   (rule 258)

    $default	reduce using rule 324 (encaps_list)

    encaps_list	go to state 145



state 57

    unticked_statement  ->  '{' . inner_statement_list '}'   (rule 13)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 146



state 58

    expr_without_variable  ->  '(' . expr ')'   (rule 210)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 147
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 59

    unticked_statement  ->  ';' .   (rule 54)

    $default	reduce using rule 54 (unticked_statement)



state 60

    compound_variable  ->  '$' . '{' expr '}'   (rule 281)
    simple_indirect_reference  ->  '$' .   (rule 295)

    '{' 	shift, and go to state 148

    $default	reduce using rule 295 (simple_indirect_reference)



state 61

    expr_without_variable  ->  '`' . encaps_list '`'   (rule 228)

    $default	reduce using rule 324 (encaps_list)

    encaps_list	go to state 149



state 62

    scalar  ->  '\"' . encaps_list '\"'   (rule 256)

    $default	reduce using rule 324 (encaps_list)

    encaps_list	go to state 150



state 63

    scalar  ->  '\'' . encaps_list '\''   (rule 257)

    $default	reduce using rule 324 (encaps_list)

    encaps_list	go to state 151



state 64

    top_statement_list  ->  top_statement_list @1 top_statement .   (rule 3)

    $default	reduce using rule 3 (top_statement_list)



state 65

    top_statement  ->  statement .   (rule 5)

    $default	reduce using rule 5 (top_statement)



state 66

    statement  ->  unticked_statement .   (rule 12)

    $default	reduce using rule 12 (statement)



state 67

    top_statement  ->  declaration_statement .   (rule 6)

    $default	reduce using rule 6 (top_statement)



state 68

    declaration_statement  ->  unticked_declaration_statement .   (rule 60)

    $default	reduce using rule 60 (declaration_statement)



state 69

    expr  ->  expr_without_variable .   (rule 268)

    $default	reduce using rule 268 (expr)



state 70

    expr_without_variable  ->  function_call .   (rule 214)

    $default	reduce using rule 214 (expr_without_variable)



state 71

    scalar  ->  common_scalar .   (rule 255)

    $default	reduce using rule 255 (scalar)



state 72

    expr_without_variable  ->  scalar .   (rule 226)

    $default	reduce using rule 226 (expr_without_variable)



state 73

    unticked_statement  ->  expr . ';'   (rule 43)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 177



state 74

    expr  ->  r_cvar .   (rule 267)

    $default	reduce using rule 267 (expr)



state 75

    expr_without_variable  ->  rw_cvar . T_INC   (rule 174)
    expr_without_variable  ->  rw_cvar . T_DEC   (rule 176)

    T_INC	shift, and go to state 178
    T_DEC	shift, and go to state 179



state 76

    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . '=' '&' T_NEW class_name @36 ctor_arguments   (rule 160)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 171)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 172)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 173)
    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    r_cvar  ->  cvar .   (rule 269)
    rw_cvar  ->  cvar .   (rule 271)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    T_INC	reduce using rule 271 (rw_cvar)
    T_DEC	reduce using rule 271 (rw_cvar)
    $default	reduce using rule 269 (r_cvar)



state 77

    cvar  ->  cvar_without_objects .   (rule 272)
    cvar  ->  cvar_without_objects . T_OBJECT_OPERATOR @48 ref_list   (rule 274)

    T_OBJECT_OPERATOR	shift, and go to state 193

    $default	reduce using rule 272 (cvar)



state 78

    cvar_without_objects  ->  reference_variable .   (rule 275)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 277)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 278)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 275 (cvar_without_objects)



state 79

    reference_variable  ->  compound_variable .   (rule 279)

    $default	reduce using rule 279 (reference_variable)



state 80

    cvar_without_objects  ->  simple_indirect_reference . reference_variable   (rule 276)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 296)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 196

    reference_variable	go to state 197
    compound_variable	go to state 79



state 81

    expr_without_variable  ->  internal_functions_in_yacc .   (rule 215)

    $default	reduce using rule 215 (expr_without_variable)



state 82

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    internal_functions_in_yacc  ->  T_INCLUDE expr .   (rule 337)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 337 (internal_functions_in_yacc)



state 83

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    internal_functions_in_yacc  ->  T_INCLUDE_ONCE expr .   (rule 338)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 338 (internal_functions_in_yacc)



state 84

    internal_functions_in_yacc  ->  T_EVAL '(' . expr ')'   (rule 339)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 198
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 85

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    internal_functions_in_yacc  ->  T_REQUIRE expr .   (rule 340)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 340 (internal_functions_in_yacc)



state 86

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    internal_functions_in_yacc  ->  T_REQUIRE_ONCE expr .   (rule 341)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 341 (internal_functions_in_yacc)



state 87

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_PRINT expr .   (rule 229)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 229 (expr_without_variable)



state 88

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  '+' expr .   (rule 198)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 198 (expr_without_variable)



state 89

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  '-' expr .   (rule 199)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 199 (expr_without_variable)



state 90

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  '!' expr .   (rule 200)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)


    $default	reduce using rule 200 (expr_without_variable)



state 91

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  '~' expr .   (rule 201)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)


    $default	reduce using rule 201 (expr_without_variable)



state 92

    expr_without_variable  ->  T_INC rw_cvar .   (rule 175)

    $default	reduce using rule 175 (expr_without_variable)



state 93

    rw_cvar  ->  cvar .   (rule 271)

    $default	reduce using rule 271 (rw_cvar)



state 94

    expr_without_variable  ->  T_DEC rw_cvar .   (rule 177)

    $default	reduce using rule 177 (expr_without_variable)



state 95

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_INT_CAST expr .   (rule 216)


    $default	reduce using rule 216 (expr_without_variable)



state 96

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_DOUBLE_CAST expr .   (rule 217)


    $default	reduce using rule 217 (expr_without_variable)



state 97

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_STRING_CAST expr .   (rule 218)


    $default	reduce using rule 218 (expr_without_variable)



state 98

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_ARRAY_CAST expr .   (rule 219)


    $default	reduce using rule 219 (expr_without_variable)



state 99

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_OBJECT_CAST expr .   (rule 220)


    $default	reduce using rule 220 (expr_without_variable)



state 100

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_BOOL_CAST expr .   (rule 221)


    $default	reduce using rule 221 (expr_without_variable)



state 101

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  T_UNSET_CAST expr .   (rule 222)


    $default	reduce using rule 222 (expr_without_variable)



state 102

    expr_without_variable  ->  '@' @44 . expr   (rule 225)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 199
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 103

    class_name  ->  T_STRING .   (rule 241)

    $default	reduce using rule 241 (class_name)



state 104

    expr_without_variable  ->  T_NEW class_name . @37 ctor_arguments   (rule 162)

    $default	reduce using rule 161 (@37)

    @37 	go to state 200



state 105

    class_name  ->  r_cvar .   (rule 242)

    $default	reduce using rule 242 (class_name)



state 106

    r_cvar  ->  cvar .   (rule 269)

    $default	reduce using rule 269 (r_cvar)



state 107

    exit_expr  ->  '(' . ')'   (rule 237)
    exit_expr  ->  '(' . expr ')'   (rule 238)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ')' 	shift, and go to state 201
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 202
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 108

    expr_without_variable  ->  T_EXIT exit_expr .   (rule 223)

    $default	reduce using rule 223 (expr_without_variable)



state 109

    unticked_statement  ->  T_IF '(' . expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' . expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 203
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 110

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @47 function_call_parameter_list ')'   (rule 235)

    T_STRING	shift, and go to state 204



state 111

    function_call  ->  T_STRING '(' . @45 function_call_parameter_list ')'   (rule 231)

    $default	reduce using rule 230 (@45)

    @45 	go to state 205



state 112

    unticked_statement  ->  T_ECHO echo_expr_list . ';'   (rule 41)
    echo_expr_list  ->  echo_expr_list . ',' expr   (rule 147)

    ',' 	shift, and go to state 206
    ';' 	shift, and go to state 207



state 113

    echo_expr_list  ->  expr .   (rule 148)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 148 (echo_expr_list)



state 114

    unticked_statement  ->  T_DO @9 . statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 208
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 115

    unticked_statement  ->  T_WHILE '(' . @7 expr ')' @8 while_statement   (rule 22)

    $default	reduce using rule 20 (@7)

    @7  	go to state 209



state 116

    unticked_statement  ->  T_FOR '(' . for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 210
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 117

    unticked_statement  ->  T_FOREACH '(' . w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)
    unticked_statement  ->  T_FOREACH '(' . expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 213
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    w_cvar	go to state 214
    rw_cvar	go to state 75
    cvar	go to state 215
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 118

    unticked_statement  ->  T_DECLARE @19 . '(' declare_list ')' declare_statement   (rule 53)

    '(' 	shift, and go to state 216



state 119

    unticked_statement  ->  T_SWITCH '(' . expr ')' @14 switch_case_list   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 217
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 120

    unticked_statement  ->  T_BREAK ';' .   (rule 32)

    $default	reduce using rule 32 (unticked_statement)



state 121

    unticked_statement  ->  T_BREAK expr . ';'   (rule 33)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 218



state 122

    unticked_statement  ->  T_CONTINUE ';' .   (rule 34)

    $default	reduce using rule 34 (unticked_statement)



state 123

    unticked_statement  ->  T_CONTINUE expr . ';'   (rule 35)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 219



state 124

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 . is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    '&' 	shift, and go to state 220

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 221



state 125

    unticked_declaration_statement  ->  T_FUNCTION @20 . is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '&' 	shift, and go to state 220

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 222



state 126

    unticked_statement  ->  T_RETURN ';' .   (rule 36)

    $default	reduce using rule 36 (unticked_statement)



state 127

    unticked_statement  ->  T_RETURN expr_without_variable . ';'   (rule 37)
    expr  ->  expr_without_variable .   (rule 268)

    ';' 	shift, and go to state 223

    $default	reduce using rule 268 (expr)



state 128

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 129

    unticked_statement  ->  T_RETURN cvar . ';'   (rule 38)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . '=' '&' T_NEW class_name @36 ctor_arguments   (rule 160)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 171)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 172)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 173)
    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    r_cvar  ->  cvar .   (rule 269)
    rw_cvar  ->  cvar .   (rule 271)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192
    ';' 	shift, and go to state 224

    T_INC	reduce using rule 271 (rw_cvar)
    T_DEC	reduce using rule 271 (rw_cvar)
    $default	reduce using rule 269 (r_cvar)



state 130

    use_filename  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 58)

    $default	reduce using rule 58 (use_filename)



state 131

    use_filename  ->  '(' . T_CONSTANT_ENCAPSED_STRING ')'   (rule 59)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 225



state 132

    unticked_statement  ->  T_USE use_filename . ';'   (rule 44)

    ';' 	shift, and go to state 226



state 133

    global_var  ->  T_VARIABLE .   (rule 124)

    $default	reduce using rule 124 (global_var)



state 134

    global_var  ->  '$' . r_cvar   (rule 125)
    global_var  ->  '$' . '{' expr '}'   (rule 126)

    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 227
    '$' 	shift, and go to state 60

    r_cvar	go to state 228
    cvar	go to state 106
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 135

    unticked_statement  ->  T_GLOBAL global_var_list . ';'   (rule 39)
    global_var_list  ->  global_var_list . ',' global_var   (rule 122)

    ',' 	shift, and go to state 229
    ';' 	shift, and go to state 230



state 136

    global_var_list  ->  global_var .   (rule 123)

    $default	reduce using rule 123 (global_var_list)



state 137

    static_var_list  ->  T_VARIABLE .   (rule 129)
    static_var_list  ->  T_VARIABLE . '=' static_scalar   (rule 130)

    '=' 	shift, and go to state 231

    $default	reduce using rule 129 (static_var_list)



state 138

    unticked_statement  ->  T_STATIC static_var_list . ';'   (rule 40)
    static_var_list  ->  static_var_list . ',' T_VARIABLE   (rule 127)
    static_var_list  ->  static_var_list . ',' T_VARIABLE '=' static_scalar   (rule 128)

    ',' 	shift, and go to state 232
    ';' 	shift, and go to state 233



state 139

    unticked_statement  ->  T_UNSET '(' . unset_variables ')' ';'   (rule 45)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    unset_variables	go to state 234
    unset_variable	go to state 235
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 140

    internal_functions_in_yacc  ->  T_ISSET '(' . isset_variables ')'   (rule 335)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 237
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    isset_variables	go to state 238



state 141

    internal_functions_in_yacc  ->  T_EMPTY '(' . cvar ')'   (rule 336)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 239
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 142

    unticked_declaration_statement  ->  T_CLASS T_STRING . @24 '{' class_statement_list '}'   (rule 68)
    unticked_declaration_statement  ->  T_CLASS T_STRING . T_EXTENDS T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_EXTENDS	shift, and go to state 240

    $default	reduce using rule 67 (@24)

    @24 	go to state 241



state 143

    expr_without_variable  ->  T_LIST '(' . @35 assignment_list ')' '=' expr   (rule 155)

    $default	reduce using rule 154 (@35)

    @35 	go to state 242



state 144

    expr_without_variable  ->  T_ARRAY '(' . array_pair_list ')'   (rule 227)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 243
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 303 (array_pair_list)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 244
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    array_pair_list	go to state 245
    non_empty_array_pair_list	go to state 246
    internal_functions_in_yacc	go to state 81



state 145

    scalar  ->  T_START_HEREDOC encaps_list . T_END_HEREDOC   (rule 258)
    encaps_list  ->  encaps_list . encaps_var   (rule 313)
    encaps_list  ->  encaps_list . T_STRING   (rule 314)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 315)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 316)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 317)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 318)
    encaps_list  ->  encaps_list . '['   (rule 319)
    encaps_list  ->  encaps_list . ']'   (rule 320)
    encaps_list  ->  encaps_list . '{'   (rule 321)
    encaps_list  ->  encaps_list . '}'   (rule 322)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 323)

    '[' 	shift, and go to state 247
    T_STRING	shift, and go to state 248
    T_VARIABLE	shift, and go to state 249
    T_NUM_STRING	shift, and go to state 250
    T_CHARACTER	shift, and go to state 251
    T_BAD_CHARACTER	shift, and go to state 252
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 253
    T_OBJECT_OPERATOR	shift, and go to state 254
    T_END_HEREDOC	shift, and go to state 255
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 256
    T_CURLY_OPEN	shift, and go to state 257
    '{' 	shift, and go to state 258
    '}' 	shift, and go to state 259
    ']' 	shift, and go to state 260

    encaps_var	go to state 261



state 146

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  '{' inner_statement_list . '}'   (rule 13)

    '}' 	shift, and go to state 262

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 147

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  '(' expr . ')'   (rule 210)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 264



state 148

    compound_variable  ->  '$' '{' . expr '}'   (rule 281)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 265
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 149

    expr_without_variable  ->  '`' encaps_list . '`'   (rule 228)
    encaps_list  ->  encaps_list . encaps_var   (rule 313)
    encaps_list  ->  encaps_list . T_STRING   (rule 314)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 315)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 316)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 317)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 318)
    encaps_list  ->  encaps_list . '['   (rule 319)
    encaps_list  ->  encaps_list . ']'   (rule 320)
    encaps_list  ->  encaps_list . '{'   (rule 321)
    encaps_list  ->  encaps_list . '}'   (rule 322)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 323)

    '[' 	shift, and go to state 247
    T_STRING	shift, and go to state 248
    T_VARIABLE	shift, and go to state 249
    T_NUM_STRING	shift, and go to state 250
    T_CHARACTER	shift, and go to state 251
    T_BAD_CHARACTER	shift, and go to state 252
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 253
    T_OBJECT_OPERATOR	shift, and go to state 254
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 256
    T_CURLY_OPEN	shift, and go to state 257
    '{' 	shift, and go to state 258
    '}' 	shift, and go to state 259
    '`' 	shift, and go to state 266
    ']' 	shift, and go to state 260

    encaps_var	go to state 261



state 150

    scalar  ->  '\"' encaps_list . '\"'   (rule 256)
    encaps_list  ->  encaps_list . encaps_var   (rule 313)
    encaps_list  ->  encaps_list . T_STRING   (rule 314)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 315)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 316)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 317)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 318)
    encaps_list  ->  encaps_list . '['   (rule 319)
    encaps_list  ->  encaps_list . ']'   (rule 320)
    encaps_list  ->  encaps_list . '{'   (rule 321)
    encaps_list  ->  encaps_list . '}'   (rule 322)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 323)

    '[' 	shift, and go to state 247
    T_STRING	shift, and go to state 248
    T_VARIABLE	shift, and go to state 249
    T_NUM_STRING	shift, and go to state 250
    T_CHARACTER	shift, and go to state 251
    T_BAD_CHARACTER	shift, and go to state 252
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 253
    T_OBJECT_OPERATOR	shift, and go to state 254
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 256
    T_CURLY_OPEN	shift, and go to state 257
    '{' 	shift, and go to state 258
    '}' 	shift, and go to state 259
    '\"'	shift, and go to state 267
    ']' 	shift, and go to state 260

    encaps_var	go to state 261



state 151

    scalar  ->  '\'' encaps_list . '\''   (rule 257)
    encaps_list  ->  encaps_list . encaps_var   (rule 313)
    encaps_list  ->  encaps_list . T_STRING   (rule 314)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 315)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 316)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 317)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 318)
    encaps_list  ->  encaps_list . '['   (rule 319)
    encaps_list  ->  encaps_list . ']'   (rule 320)
    encaps_list  ->  encaps_list . '{'   (rule 321)
    encaps_list  ->  encaps_list . '}'   (rule 322)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 323)

    '[' 	shift, and go to state 247
    T_STRING	shift, and go to state 248
    T_VARIABLE	shift, and go to state 249
    T_NUM_STRING	shift, and go to state 250
    T_CHARACTER	shift, and go to state 251
    T_BAD_CHARACTER	shift, and go to state 252
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 253
    T_OBJECT_OPERATOR	shift, and go to state 254
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 256
    T_CURLY_OPEN	shift, and go to state 257
    '{' 	shift, and go to state 258
    '}' 	shift, and go to state 259
    '\''	shift, and go to state 268
    ']' 	shift, and go to state 260

    encaps_var	go to state 261



state 152

    expr_without_variable  ->  expr T_LOGICAL_OR . @40 expr   (rule 183)

    $default	reduce using rule 182 (@40)

    @40 	go to state 269



state 153

    expr_without_variable  ->  expr T_LOGICAL_XOR . expr   (rule 186)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 270
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 154

    expr_without_variable  ->  expr T_LOGICAL_AND . @41 expr   (rule 185)

    $default	reduce using rule 184 (@41)

    @41 	go to state 271



state 155

    expr_without_variable  ->  expr '?' . @42 expr ':' @43 expr   (rule 213)

    $default	reduce using rule 211 (@42)

    @42 	go to state 272



state 156

    expr_without_variable  ->  expr T_BOOLEAN_OR . @38 expr   (rule 179)

    $default	reduce using rule 178 (@38)

    @38 	go to state 273



state 157

    expr_without_variable  ->  expr T_BOOLEAN_AND . @39 expr   (rule 181)

    $default	reduce using rule 180 (@39)

    @39 	go to state 274



state 158

    expr_without_variable  ->  expr '|' . expr   (rule 187)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 275
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 159

    expr_without_variable  ->  expr '^' . expr   (rule 189)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 276
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 160

    expr_without_variable  ->  expr '&' . expr   (rule 188)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 277
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 161

    expr_without_variable  ->  expr T_IS_EQUAL . expr   (rule 204)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 278
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 162

    expr_without_variable  ->  expr T_IS_NOT_EQUAL . expr   (rule 205)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 279
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 163

    expr_without_variable  ->  expr T_IS_IDENTICAL . expr   (rule 202)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 280
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 164

    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL . expr   (rule 203)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 281
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 165

    expr_without_variable  ->  expr '<' . expr   (rule 206)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 282
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 166

    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL . expr   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 283
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 167

    expr_without_variable  ->  expr '>' . expr   (rule 208)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 284
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 168

    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL . expr   (rule 209)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 285
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 169

    expr_without_variable  ->  expr T_SL . expr   (rule 196)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 286
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 170

    expr_without_variable  ->  expr T_SR . expr   (rule 197)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 287
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 171

    expr_without_variable  ->  expr '+' . expr   (rule 191)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 288
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 172

    expr_without_variable  ->  expr '-' . expr   (rule 192)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 289
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 173

    expr_without_variable  ->  expr '.' . expr   (rule 190)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 290
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 174

    expr_without_variable  ->  expr '*' . expr   (rule 193)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 291
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 175

    expr_without_variable  ->  expr '/' . expr   (rule 194)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 292
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 176

    expr_without_variable  ->  expr '%' . expr   (rule 195)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 293
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 177

    unticked_statement  ->  expr ';' .   (rule 43)

    $default	reduce using rule 43 (unticked_statement)



state 178

    expr_without_variable  ->  rw_cvar T_INC .   (rule 174)

    $default	reduce using rule 174 (expr_without_variable)



state 179

    expr_without_variable  ->  rw_cvar T_DEC .   (rule 176)

    $default	reduce using rule 176 (expr_without_variable)



state 180

    expr_without_variable  ->  cvar '=' . expr   (rule 156)
    expr_without_variable  ->  cvar '=' . '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar '=' . '&' function_call   (rule 158)
    expr_without_variable  ->  cvar '=' . '&' T_NEW class_name @36 ctor_arguments   (rule 160)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 294
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 295
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 181

    expr_without_variable  ->  cvar T_PLUS_EQUAL . expr   (rule 163)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 296
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 182

    expr_without_variable  ->  cvar T_MINUS_EQUAL . expr   (rule 164)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 297
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 183

    expr_without_variable  ->  cvar T_MUL_EQUAL . expr   (rule 165)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 298
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 184

    expr_without_variable  ->  cvar T_DIV_EQUAL . expr   (rule 166)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 299
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 185

    expr_without_variable  ->  cvar T_CONCAT_EQUAL . expr   (rule 167)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 300
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 186

    expr_without_variable  ->  cvar T_MOD_EQUAL . expr   (rule 168)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 301
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 187

    expr_without_variable  ->  cvar T_AND_EQUAL . expr   (rule 169)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 302
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 188

    expr_without_variable  ->  cvar T_OR_EQUAL . expr   (rule 170)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 303
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 189

    expr_without_variable  ->  cvar T_XOR_EQUAL . expr   (rule 171)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 304
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 190

    expr_without_variable  ->  cvar T_SL_EQUAL . expr   (rule 172)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 305
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 191

    expr_without_variable  ->  cvar T_SR_EQUAL . expr   (rule 173)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 306
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 192

    function_call  ->  cvar '(' . @46 function_call_parameter_list ')'   (rule 233)

    $default	reduce using rule 232 (@46)

    @46 	go to state 307



state 193

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR . @48 ref_list   (rule 274)

    $default	reduce using rule 273 (@48)

    @48 	go to state 308



state 194

    reference_variable  ->  reference_variable '[' . dim_offset ']'   (rule 277)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 282 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 309
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 310
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 195

    reference_variable  ->  reference_variable '{' . expr '}'   (rule 278)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 311
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 196

    compound_variable  ->  '$' . '{' expr '}'   (rule 281)
    simple_indirect_reference  ->  simple_indirect_reference '$' .   (rule 296)

    '{' 	shift, and go to state 148

    $default	reduce using rule 296 (simple_indirect_reference)



state 197

    cvar_without_objects  ->  simple_indirect_reference reference_variable .   (rule 276)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 277)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 278)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 276 (cvar_without_objects)



state 198

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    internal_functions_in_yacc  ->  T_EVAL '(' expr . ')'   (rule 339)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 312



state 199

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  '@' @44 expr .   (rule 225)


    $default	reduce using rule 225 (expr_without_variable)



state 200

    expr_without_variable  ->  T_NEW class_name @37 . ctor_arguments   (rule 162)

    '(' 	shift, and go to state 313

    $default	reduce using rule 239 (ctor_arguments)

    ctor_arguments	go to state 314



state 201

    exit_expr  ->  '(' ')' .   (rule 237)

    $default	reduce using rule 237 (exit_expr)



state 202

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    exit_expr  ->  '(' expr . ')'   (rule 238)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 315



state 203

    unticked_statement  ->  T_IF '(' expr . ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr . ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 316



state 204

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @47 function_call_parameter_list ')'   (rule 235)

    '(' 	shift, and go to state 317



state 205

    function_call  ->  T_STRING '(' @45 . function_call_parameter_list ')'   (rule 231)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 319
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 206

    echo_expr_list  ->  echo_expr_list ',' . expr   (rule 147)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 323
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 207

    unticked_statement  ->  T_ECHO echo_expr_list ';' .   (rule 41)

    $default	reduce using rule 41 (unticked_statement)



state 208

    unticked_statement  ->  T_DO @9 statement . T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_WHILE	shift, and go to state 324



state 209

    unticked_statement  ->  T_WHILE '(' @7 . expr ')' @8 while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 325
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 210

    unticked_statement  ->  T_FOR '(' for_expr . ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 326



state 211

    for_expr  ->  non_empty_for_expr .   (rule 150)
    non_empty_for_expr  ->  non_empty_for_expr . ',' @34 expr   (rule 152)

    ',' 	shift, and go to state 327

    $default	reduce using rule 150 (for_expr)



state 212

    non_empty_for_expr  ->  expr .   (rule 153)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 153 (non_empty_for_expr)



state 213

    unticked_statement  ->  T_FOREACH '(' expr_without_variable . T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)
    expr  ->  expr_without_variable .   (rule 268)

    T_AS	shift, and go to state 328

    $default	reduce using rule 268 (expr)



state 214

    unticked_statement  ->  T_FOREACH '(' w_cvar . T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_AS	shift, and go to state 329



state 215

    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . '=' '&' T_NEW class_name @36 ctor_arguments   (rule 160)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 171)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 172)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 173)
    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    r_cvar  ->  cvar .   (rule 269)
    w_cvar  ->  cvar .   (rule 270)
    rw_cvar  ->  cvar .   (rule 271)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    T_INC	reduce using rule 271 (rw_cvar)
    T_DEC	reduce using rule 271 (rw_cvar)
    T_AS	reduce using rule 270 (w_cvar)
    $default	reduce using rule 269 (r_cvar)



state 216

    unticked_statement  ->  T_DECLARE @19 '(' . declare_list ')' declare_statement   (rule 53)

    T_STRING	shift, and go to state 330

    declare_list	go to state 331



state 217

    unticked_statement  ->  T_SWITCH '(' expr . ')' @14 switch_case_list   (rule 31)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 332



state 218

    unticked_statement  ->  T_BREAK expr ';' .   (rule 33)

    $default	reduce using rule 33 (unticked_statement)



state 219

    unticked_statement  ->  T_CONTINUE expr ';' .   (rule 35)

    $default	reduce using rule 35 (unticked_statement)



state 220

    is_reference  ->  '&' .   (rule 141)

    $default	reduce using rule 141 (is_reference)



state 221

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference . T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    T_STRING	shift, and go to state 333



state 222

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference . T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    T_STRING	shift, and go to state 334



state 223

    unticked_statement  ->  T_RETURN expr_without_variable ';' .   (rule 37)

    $default	reduce using rule 37 (unticked_statement)



state 224

    unticked_statement  ->  T_RETURN cvar ';' .   (rule 38)

    $default	reduce using rule 38 (unticked_statement)



state 225

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING . ')'   (rule 59)

    ')' 	shift, and go to state 335



state 226

    unticked_statement  ->  T_USE use_filename ';' .   (rule 44)

    $default	reduce using rule 44 (unticked_statement)



state 227

    global_var  ->  '$' '{' . expr '}'   (rule 126)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 336
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 228

    global_var  ->  '$' r_cvar .   (rule 125)

    $default	reduce using rule 125 (global_var)



state 229

    global_var_list  ->  global_var_list ',' . global_var   (rule 122)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var	go to state 337



state 230

    unticked_statement  ->  T_GLOBAL global_var_list ';' .   (rule 39)

    $default	reduce using rule 39 (unticked_statement)



state 231

    static_var_list  ->  T_VARIABLE '=' . static_scalar   (rule 130)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 343



state 232

    static_var_list  ->  static_var_list ',' . T_VARIABLE   (rule 127)
    static_var_list  ->  static_var_list ',' . T_VARIABLE '=' static_scalar   (rule 128)

    T_VARIABLE	shift, and go to state 344



state 233

    unticked_statement  ->  T_STATIC static_var_list ';' .   (rule 40)

    $default	reduce using rule 40 (unticked_statement)



state 234

    unticked_statement  ->  T_UNSET '(' unset_variables . ')' ';'   (rule 45)
    unset_variables  ->  unset_variables . ',' unset_variable   (rule 56)

    ',' 	shift, and go to state 345
    ')' 	shift, and go to state 346



state 235

    unset_variables  ->  unset_variable .   (rule 55)

    $default	reduce using rule 55 (unset_variables)



state 236

    unset_variable  ->  cvar .   (rule 57)

    $default	reduce using rule 57 (unset_variable)



state 237

    isset_variables  ->  cvar .   (rule 342)

    $default	reduce using rule 342 (isset_variables)



state 238

    internal_functions_in_yacc  ->  T_ISSET '(' isset_variables . ')'   (rule 335)
    isset_variables  ->  isset_variables . ',' @53 cvar   (rule 344)

    ',' 	shift, and go to state 347
    ')' 	shift, and go to state 348



state 239

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar . ')'   (rule 336)

    ')' 	shift, and go to state 349



state 240

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS . T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_STRING	shift, and go to state 350



state 241

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 . '{' class_statement_list '}'   (rule 68)

    '{' 	shift, and go to state 351



state 242

    expr_without_variable  ->  T_LIST '(' @35 . assignment_list ')' '=' expr   (rule 155)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 352
    '$' 	shift, and go to state 60

    $default	reduce using rule 302 (assignment_list_element)

    cvar	go to state 353
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 354
    assignment_list_element	go to state 355



state 243

    non_empty_array_pair_list  ->  '&' . w_cvar   (rule 312)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 356
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 244

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW expr   (rule 307)
    non_empty_array_pair_list  ->  expr .   (rule 308)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW '&' w_cvar   (rule 311)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 358

    $default	reduce using rule 308 (non_empty_array_pair_list)



state 245

    expr_without_variable  ->  T_ARRAY '(' array_pair_list . ')'   (rule 227)

    ')' 	shift, and go to state 359



state 246

    array_pair_list  ->  non_empty_array_pair_list . possible_comma   (rule 304)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr   (rule 305)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr   (rule 306)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_cvar   (rule 309)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' '&' w_cvar   (rule 310)

    ',' 	shift, and go to state 360

    $default	reduce using rule 261 (possible_comma)

    possible_comma	go to state 361



state 247

    encaps_list  ->  encaps_list '[' .   (rule 319)

    $default	reduce using rule 319 (encaps_list)



state 248

    encaps_list  ->  encaps_list T_STRING .   (rule 314)

    $default	reduce using rule 314 (encaps_list)



state 249

    encaps_var  ->  T_VARIABLE .   (rule 325)
    encaps_var  ->  T_VARIABLE . '[' @52 encaps_var_offset ']'   (rule 327)
    encaps_var  ->  T_VARIABLE . T_OBJECT_OPERATOR T_STRING   (rule 328)

    '[' 	shift, and go to state 362
    T_OBJECT_OPERATOR	shift, and go to state 363

    '[' 	[reduce using rule 325 (encaps_var)]
    T_OBJECT_OPERATOR	[reduce using rule 325 (encaps_var)]
    $default	reduce using rule 325 (encaps_var)



state 250

    encaps_list  ->  encaps_list T_NUM_STRING .   (rule 315)

    $default	reduce using rule 315 (encaps_list)



state 251

    encaps_list  ->  encaps_list T_CHARACTER .   (rule 317)

    $default	reduce using rule 317 (encaps_list)



state 252

    encaps_list  ->  encaps_list T_BAD_CHARACTER .   (rule 318)

    $default	reduce using rule 318 (encaps_list)



state 253

    encaps_list  ->  encaps_list T_ENCAPSED_AND_WHITESPACE .   (rule 316)

    $default	reduce using rule 316 (encaps_list)



state 254

    encaps_list  ->  encaps_list T_OBJECT_OPERATOR .   (rule 323)

    $default	reduce using rule 323 (encaps_list)



state 255

    scalar  ->  T_START_HEREDOC encaps_list T_END_HEREDOC .   (rule 258)

    $default	reduce using rule 258 (scalar)



state 256

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . expr '}'   (rule 329)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'   (rule 330)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 364
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 365
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 257

    encaps_var  ->  T_CURLY_OPEN . cvar '}'   (rule 331)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 366
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 258

    encaps_list  ->  encaps_list '{' .   (rule 321)

    $default	reduce using rule 321 (encaps_list)



state 259

    encaps_list  ->  encaps_list '}' .   (rule 322)

    $default	reduce using rule 322 (encaps_list)



state 260

    encaps_list  ->  encaps_list ']' .   (rule 320)

    $default	reduce using rule 320 (encaps_list)



state 261

    encaps_list  ->  encaps_list encaps_var .   (rule 313)

    $default	reduce using rule 313 (encaps_list)



state 262

    unticked_statement  ->  '{' inner_statement_list '}' .   (rule 13)

    $default	reduce using rule 13 (unticked_statement)



state 263

    inner_statement_list  ->  inner_statement_list @2 . inner_statement   (rule 8)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_OLD_FUNCTION	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    inner_statement	go to state 367
    statement	go to state 368
    unticked_statement	go to state 66
    declaration_statement	go to state 369
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 264

    expr_without_variable  ->  '(' expr ')' .   (rule 210)

    $default	reduce using rule 210 (expr_without_variable)



state 265

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    compound_variable  ->  '$' '{' expr . '}'   (rule 281)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 370



state 266

    expr_without_variable  ->  '`' encaps_list '`' .   (rule 228)

    $default	reduce using rule 228 (expr_without_variable)



state 267

    scalar  ->  '\"' encaps_list '\"' .   (rule 256)

    $default	reduce using rule 256 (scalar)



state 268

    scalar  ->  '\'' encaps_list '\'' .   (rule 257)

    $default	reduce using rule 257 (scalar)



state 269

    expr_without_variable  ->  expr T_LOGICAL_OR @40 . expr   (rule 183)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 371
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 270

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr T_LOGICAL_XOR expr .   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 186 (expr_without_variable)



state 271

    expr_without_variable  ->  expr T_LOGICAL_AND @41 . expr   (rule 185)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 372
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 272

    expr_without_variable  ->  expr '?' @42 . expr ':' @43 expr   (rule 213)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 373
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 273

    expr_without_variable  ->  expr T_BOOLEAN_OR @38 . expr   (rule 179)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 374
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 274

    expr_without_variable  ->  expr T_BOOLEAN_AND @39 . expr   (rule 181)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 375
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 275

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr '|' expr .   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 187 (expr_without_variable)



state 276

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr '^' expr .   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 189 (expr_without_variable)



state 277

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr '&' expr .   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 188 (expr_without_variable)



state 278

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr T_IS_EQUAL expr .   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 204 (expr_without_variable)



state 279

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr T_IS_NOT_EQUAL expr .   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 205 (expr_without_variable)



state 280

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr T_IS_IDENTICAL expr .   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 202 (expr_without_variable)



state 281

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL expr .   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 203 (expr_without_variable)



state 282

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr '<' expr .   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 206 (expr_without_variable)



state 283

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL expr .   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 207 (expr_without_variable)



state 284

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr '>' expr .   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 208 (expr_without_variable)



state 285

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL expr .   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 209 (expr_without_variable)



state 286

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr T_SL expr .   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 196 (expr_without_variable)



state 287

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr T_SR expr .   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 197 (expr_without_variable)



state 288

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr '+' expr .   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 191 (expr_without_variable)



state 289

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr '-' expr .   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 192 (expr_without_variable)



state 290

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr '.' expr .   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 190 (expr_without_variable)



state 291

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr '*' expr .   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)


    $default	reduce using rule 193 (expr_without_variable)



state 292

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr '/' expr .   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)


    $default	reduce using rule 194 (expr_without_variable)



state 293

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr '%' expr .   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)


    $default	reduce using rule 195 (expr_without_variable)



state 294

    expr_without_variable  ->  cvar '=' '&' . w_cvar   (rule 157)
    expr_without_variable  ->  cvar '=' '&' . function_call   (rule 158)
    expr_without_variable  ->  cvar '=' '&' . T_NEW class_name @36 ctor_arguments   (rule 160)

    T_NEW	shift, and go to state 376
    T_STRING	shift, and go to state 377
    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    function_call	go to state 378
    w_cvar	go to state 379
    cvar	go to state 380
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 295

    expr_without_variable  ->  cvar '=' expr .   (rule 156)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 156 (expr_without_variable)



state 296

    expr_without_variable  ->  cvar T_PLUS_EQUAL expr .   (rule 163)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 163 (expr_without_variable)



state 297

    expr_without_variable  ->  cvar T_MINUS_EQUAL expr .   (rule 164)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 164 (expr_without_variable)



state 298

    expr_without_variable  ->  cvar T_MUL_EQUAL expr .   (rule 165)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 165 (expr_without_variable)



state 299

    expr_without_variable  ->  cvar T_DIV_EQUAL expr .   (rule 166)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 166 (expr_without_variable)



state 300

    expr_without_variable  ->  cvar T_CONCAT_EQUAL expr .   (rule 167)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 167 (expr_without_variable)



state 301

    expr_without_variable  ->  cvar T_MOD_EQUAL expr .   (rule 168)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 168 (expr_without_variable)



state 302

    expr_without_variable  ->  cvar T_AND_EQUAL expr .   (rule 169)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 169 (expr_without_variable)



state 303

    expr_without_variable  ->  cvar T_OR_EQUAL expr .   (rule 170)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 170 (expr_without_variable)



state 304

    expr_without_variable  ->  cvar T_XOR_EQUAL expr .   (rule 171)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 171 (expr_without_variable)



state 305

    expr_without_variable  ->  cvar T_SL_EQUAL expr .   (rule 172)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 172 (expr_without_variable)



state 306

    expr_without_variable  ->  cvar T_SR_EQUAL expr .   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 173 (expr_without_variable)



state 307

    function_call  ->  cvar '(' @46 . function_call_parameter_list ')'   (rule 233)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 381
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 308

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @48 . ref_list   (rule 274)

    T_STRING	shift, and go to state 382
    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 383
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 384
    reference_variable	go to state 78
    compound_variable	go to state 79
    ref_list	go to state 385
    object_property	go to state 386
    object_dim_list	go to state 387
    variable_name	go to state 388
    simple_indirect_reference	go to state 80



state 309

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    dim_offset  ->  expr .   (rule 283)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 283 (dim_offset)



state 310

    reference_variable  ->  reference_variable '[' dim_offset . ']'   (rule 277)

    ']' 	shift, and go to state 389



state 311

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    reference_variable  ->  reference_variable '{' expr . '}'   (rule 278)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 390



state 312

    internal_functions_in_yacc  ->  T_EVAL '(' expr ')' .   (rule 339)

    $default	reduce using rule 339 (internal_functions_in_yacc)



state 313

    ctor_arguments  ->  '(' . function_call_parameter_list ')'   (rule 240)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 391
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 314

    expr_without_variable  ->  T_NEW class_name @37 ctor_arguments .   (rule 162)

    $default	reduce using rule 162 (expr_without_variable)



state 315

    exit_expr  ->  '(' expr ')' .   (rule 238)

    $default	reduce using rule 238 (exit_expr)



state 316

    unticked_statement  ->  T_IF '(' expr ')' . @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr ')' . ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    ':' 	shift, and go to state 392

    $default	reduce using rule 14 (@3)

    @3  	go to state 393



state 317

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @47 function_call_parameter_list ')'   (rule 235)

    $default	reduce using rule 234 (@47)

    @47 	go to state 394



state 318

    non_empty_function_call_parameter_list  ->  '&' . w_cvar   (rule 118)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 395
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 319

    function_call  ->  T_STRING '(' @45 function_call_parameter_list . ')'   (rule 231)

    ')' 	shift, and go to state 396



state 320

    function_call_parameter_list  ->  non_empty_function_call_parameter_list .   (rule 114)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' expr_without_variable   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' cvar   (rule 120)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' '&' w_cvar   (rule 121)

    ',' 	shift, and go to state 397

    $default	reduce using rule 114 (function_call_parameter_list)



state 321

    non_empty_function_call_parameter_list  ->  expr_without_variable .   (rule 116)
    expr  ->  expr_without_variable .   (rule 268)

    ',' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    $default	reduce using rule 268 (expr)



state 322

    non_empty_function_call_parameter_list  ->  cvar .   (rule 117)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . '=' '&' T_NEW class_name @36 ctor_arguments   (rule 160)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 171)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 172)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 173)
    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    r_cvar  ->  cvar .   (rule 269)
    rw_cvar  ->  cvar .   (rule 271)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    ',' 	reduce using rule 117 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 271 (rw_cvar)
    T_DEC	reduce using rule 271 (rw_cvar)
    ')' 	reduce using rule 117 (non_empty_function_call_parameter_list)
    $default	reduce using rule 269 (r_cvar)



state 323

    echo_expr_list  ->  echo_expr_list ',' expr .   (rule 147)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 147 (echo_expr_list)



state 324

    unticked_statement  ->  T_DO @9 statement T_WHILE . '(' @10 expr ')' ';'   (rule 25)

    '(' 	shift, and go to state 398



state 325

    unticked_statement  ->  T_WHILE '(' @7 expr . ')' @8 while_statement   (rule 22)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 399



state 326

    unticked_statement  ->  T_FOR '(' for_expr ';' . @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 26 (@11)

    @11 	go to state 400



state 327

    non_empty_for_expr  ->  non_empty_for_expr ',' . @34 expr   (rule 152)

    $default	reduce using rule 151 (@34)

    @34 	go to state 401



state 328

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS . @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    $default	reduce using rule 49 (@17)

    @17 	go to state 402



state 329

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS . @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    $default	reduce using rule 46 (@15)

    @15 	go to state 403



state 330

    declare_list  ->  T_STRING . '=' static_scalar   (rule 79)

    '=' 	shift, and go to state 404



state 331

    unticked_statement  ->  T_DECLARE @19 '(' declare_list . ')' declare_statement   (rule 53)
    declare_list  ->  declare_list . ',' T_STRING '=' static_scalar   (rule 80)

    ',' 	shift, and go to state 405
    ')' 	shift, and go to state 406



state 332

    unticked_statement  ->  T_SWITCH '(' expr ')' . @14 switch_case_list   (rule 31)

    $default	reduce using rule 30 (@14)

    @14 	go to state 407



state 333

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING . @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 65 (@23)

    @23 	go to state 408



state 334

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING . @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    $default	reduce using rule 62 (@21)

    @21 	go to state 409



state 335

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING ')' .   (rule 59)

    $default	reduce using rule 59 (use_filename)



state 336

    global_var  ->  '$' '{' expr . '}'   (rule 126)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 410



state 337

    global_var_list  ->  global_var_list ',' global_var .   (rule 122)

    $default	reduce using rule 122 (global_var_list)



state 338

    static_scalar  ->  '+' . static_scalar   (rule 250)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 411



state 339

    static_scalar  ->  '-' . static_scalar   (rule 251)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 412



state 340

    static_scalar  ->  T_STRING .   (rule 249)

    $default	reduce using rule 249 (static_scalar)



state 341

    static_scalar  ->  T_ARRAY . '(' static_array_pair_list ')'   (rule 252)

    '(' 	shift, and go to state 413



state 342

    static_scalar  ->  common_scalar .   (rule 248)

    $default	reduce using rule 248 (static_scalar)



state 343

    static_var_list  ->  T_VARIABLE '=' static_scalar .   (rule 130)

    $default	reduce using rule 130 (static_var_list)



state 344

    static_var_list  ->  static_var_list ',' T_VARIABLE .   (rule 127)
    static_var_list  ->  static_var_list ',' T_VARIABLE . '=' static_scalar   (rule 128)

    '=' 	shift, and go to state 414

    $default	reduce using rule 127 (static_var_list)



state 345

    unset_variables  ->  unset_variables ',' . unset_variable   (rule 56)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    unset_variable	go to state 415
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 346

    unticked_statement  ->  T_UNSET '(' unset_variables ')' . ';'   (rule 45)

    ';' 	shift, and go to state 416



state 347

    isset_variables  ->  isset_variables ',' . @53 cvar   (rule 344)

    $default	reduce using rule 343 (@53)

    @53 	go to state 417



state 348

    internal_functions_in_yacc  ->  T_ISSET '(' isset_variables ')' .   (rule 335)

    $default	reduce using rule 335 (internal_functions_in_yacc)



state 349

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar ')' .   (rule 336)

    $default	reduce using rule 336 (internal_functions_in_yacc)



state 350

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING . @25 '{' class_statement_list '}'   (rule 70)

    $default	reduce using rule 69 (@25)

    @25 	go to state 418



state 351

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' . class_statement_list '}'   (rule 68)

    $default	reduce using rule 132 (class_statement_list)

    class_statement_list	go to state 419



state 352

    assignment_list_element  ->  T_LIST . '(' @51 assignment_list ')'   (rule 301)

    '(' 	shift, and go to state 420



state 353

    assignment_list_element  ->  cvar .   (rule 299)

    $default	reduce using rule 299 (assignment_list_element)



state 354

    expr_without_variable  ->  T_LIST '(' @35 assignment_list . ')' '=' expr   (rule 155)
    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 297)

    ',' 	shift, and go to state 421
    ')' 	shift, and go to state 422



state 355

    assignment_list  ->  assignment_list_element .   (rule 298)

    $default	reduce using rule 298 (assignment_list)



state 356

    non_empty_array_pair_list  ->  '&' w_cvar .   (rule 312)

    $default	reduce using rule 312 (non_empty_array_pair_list)



state 357

    w_cvar  ->  cvar .   (rule 270)

    $default	reduce using rule 270 (w_cvar)



state 358

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . expr   (rule 307)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . '&' w_cvar   (rule 311)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 423
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 424
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 359

    expr_without_variable  ->  T_ARRAY '(' array_pair_list ')' .   (rule 227)

    $default	reduce using rule 227 (expr_without_variable)



state 360

    possible_comma  ->  ',' .   (rule 262)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr   (rule 305)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr   (rule 306)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_cvar   (rule 309)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . '&' w_cvar   (rule 310)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 425
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 262 (possible_comma)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 426
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 361

    array_pair_list  ->  non_empty_array_pair_list possible_comma .   (rule 304)

    $default	reduce using rule 304 (array_pair_list)



state 362

    encaps_var  ->  T_VARIABLE '[' . @52 encaps_var_offset ']'   (rule 327)

    $default	reduce using rule 326 (@52)

    @52 	go to state 427



state 363

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR . T_STRING   (rule 328)

    T_STRING	shift, and go to state 428



state 364

    scalar  ->  T_STRING_VARNAME .   (rule 254)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'   (rule 330)

    '[' 	shift, and go to state 429

    $default	reduce using rule 254 (scalar)



state 365

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr . '}'   (rule 329)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 430



state 366

    encaps_var  ->  T_CURLY_OPEN cvar . '}'   (rule 331)

    '}' 	shift, and go to state 431



state 367

    inner_statement_list  ->  inner_statement_list @2 inner_statement .   (rule 8)

    $default	reduce using rule 8 (inner_statement_list)



state 368

    inner_statement  ->  statement .   (rule 10)

    $default	reduce using rule 10 (inner_statement)



state 369

    inner_statement  ->  declaration_statement .   (rule 11)

    $default	reduce using rule 11 (inner_statement)



state 370

    compound_variable  ->  '$' '{' expr '}' .   (rule 281)

    $default	reduce using rule 281 (compound_variable)



state 371

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr T_LOGICAL_OR @40 expr .   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 183 (expr_without_variable)



state 372

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr T_LOGICAL_AND @41 expr .   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 185 (expr_without_variable)



state 373

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  expr '?' @42 expr . ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 432
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 374

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr T_BOOLEAN_OR @38 expr .   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 179 (expr_without_variable)



state 375

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr T_BOOLEAN_AND @39 expr .   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 181 (expr_without_variable)



state 376

    expr_without_variable  ->  cvar '=' '&' T_NEW . class_name @36 ctor_arguments   (rule 160)

    T_STRING	shift, and go to state 103
    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    class_name	go to state 433
    r_cvar	go to state 105
    cvar	go to state 106
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 377

    function_call  ->  T_STRING . '(' @45 function_call_parameter_list ')'   (rule 231)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 function_call_parameter_list ')'   (rule 235)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 110
    '(' 	shift, and go to state 111



state 378

    expr_without_variable  ->  cvar '=' '&' function_call .   (rule 158)

    $default	reduce using rule 158 (expr_without_variable)



state 379

    expr_without_variable  ->  cvar '=' '&' w_cvar .   (rule 157)

    $default	reduce using rule 157 (expr_without_variable)



state 380

    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    w_cvar  ->  cvar .   (rule 270)

    '(' 	shift, and go to state 192

    $default	reduce using rule 270 (w_cvar)



state 381

    function_call  ->  cvar '(' @46 function_call_parameter_list . ')'   (rule 233)

    ')' 	shift, and go to state 434



state 382

    variable_name  ->  T_STRING .   (rule 293)

    $default	reduce using rule 293 (variable_name)



state 383

    variable_name  ->  '{' . expr '}'   (rule 294)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 435
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 384

    object_property  ->  cvar_without_objects . @50   (rule 289)

    $default	reduce using rule 288 (@50)

    @50 	go to state 436



state 385

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @48 ref_list .   (rule 274)
    ref_list  ->  ref_list . T_OBJECT_OPERATOR @49 object_property   (rule 286)

    T_OBJECT_OPERATOR	shift, and go to state 437

    $default	reduce using rule 274 (cvar)



state 386

    ref_list  ->  object_property .   (rule 284)

    $default	reduce using rule 284 (ref_list)



state 387

    object_property  ->  object_dim_list .   (rule 287)
    object_dim_list  ->  object_dim_list . '[' dim_offset ']'   (rule 290)
    object_dim_list  ->  object_dim_list . '{' expr '}'   (rule 291)

    '[' 	shift, and go to state 438
    '{' 	shift, and go to state 439

    $default	reduce using rule 287 (object_property)



state 388

    object_dim_list  ->  variable_name .   (rule 292)

    $default	reduce using rule 292 (object_dim_list)



state 389

    reference_variable  ->  reference_variable '[' dim_offset ']' .   (rule 277)

    $default	reduce using rule 277 (reference_variable)



state 390

    reference_variable  ->  reference_variable '{' expr '}' .   (rule 278)

    $default	reduce using rule 278 (reference_variable)



state 391

    ctor_arguments  ->  '(' function_call_parameter_list . ')'   (rule 240)

    ')' 	shift, and go to state 440



state 392

    unticked_statement  ->  T_IF '(' expr ')' ':' . @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 17 (@5)

    @5  	go to state 441



state 393

    unticked_statement  ->  T_IF '(' expr ')' @3 . statement @4 elseif_list else_single   (rule 16)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 442
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 394

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 . function_call_parameter_list ')'   (rule 235)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 443
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 395

    non_empty_function_call_parameter_list  ->  '&' w_cvar .   (rule 118)

    $default	reduce using rule 118 (non_empty_function_call_parameter_list)



state 396

    function_call  ->  T_STRING '(' @45 function_call_parameter_list ')' .   (rule 231)

    $default	reduce using rule 231 (function_call)



state 397

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . expr_without_variable   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . cvar   (rule 120)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . '&' w_cvar   (rule 121)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 444
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 445
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 446
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 398

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' . @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 24 (@10)

    @10 	go to state 447



state 399

    unticked_statement  ->  T_WHILE '(' @7 expr ')' . @8 while_statement   (rule 22)

    $default	reduce using rule 21 (@8)

    @8  	go to state 448



state 400

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 . for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 449
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 401

    non_empty_for_expr  ->  non_empty_for_expr ',' @34 . expr   (rule 152)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 450
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 402

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 . w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 451
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 403

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 . w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 452
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 404

    declare_list  ->  T_STRING '=' . static_scalar   (rule 79)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 453



state 405

    declare_list  ->  declare_list ',' . T_STRING '=' static_scalar   (rule 80)

    T_STRING	shift, and go to state 454



state 406

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' . declare_statement   (rule 53)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 455
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 456
    unticked_statement	go to state 66
    declare_statement	go to state 457
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 407

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 . switch_case_list   (rule 31)

    ':' 	shift, and go to state 458
    '{' 	shift, and go to state 459

    switch_case_list	go to state 460



state 408

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 . parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    '&' 	shift, and go to state 461
    T_VARIABLE	shift, and go to state 462
    T_CONST	shift, and go to state 463

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 464
    non_empty_parameter_list	go to state 465



state 409

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '(' 	shift, and go to state 466



state 410

    global_var  ->  '$' '{' expr '}' .   (rule 126)

    $default	reduce using rule 126 (global_var)



state 411

    static_scalar  ->  '+' static_scalar .   (rule 250)

    $default	reduce using rule 250 (static_scalar)



state 412

    static_scalar  ->  '-' static_scalar .   (rule 251)

    $default	reduce using rule 251 (static_scalar)



state 413

    static_scalar  ->  T_ARRAY '(' . static_array_pair_list ')'   (rule 252)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 259 (static_array_pair_list)

    common_scalar	go to state 342
    static_scalar	go to state 467
    static_array_pair_list	go to state 468
    non_empty_static_array_pair_list	go to state 469



state 414

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' . static_scalar   (rule 128)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 470



state 415

    unset_variables  ->  unset_variables ',' unset_variable .   (rule 56)

    $default	reduce using rule 56 (unset_variables)



state 416

    unticked_statement  ->  T_UNSET '(' unset_variables ')' ';' .   (rule 45)

    $default	reduce using rule 45 (unticked_statement)



state 417

    isset_variables  ->  isset_variables ',' @53 . cvar   (rule 344)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 471
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 418

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 . '{' class_statement_list '}'   (rule 70)

    '{' 	shift, and go to state 472



state 419

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' class_statement_list . '}'   (rule 68)
    class_statement_list  ->  class_statement_list . class_statement   (rule 131)

    T_OLD_FUNCTION	shift, and go to state 473
    T_FUNCTION	shift, and go to state 474
    T_VAR	shift, and go to state 475
    '}' 	shift, and go to state 476

    class_statement	go to state 477



state 420

    assignment_list_element  ->  T_LIST '(' . @51 assignment_list ')'   (rule 301)

    $default	reduce using rule 300 (@51)

    @51 	go to state 478



state 421

    assignment_list  ->  assignment_list ',' . assignment_list_element   (rule 297)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 352
    '$' 	shift, and go to state 60

    $default	reduce using rule 302 (assignment_list_element)

    cvar	go to state 353
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list_element	go to state 479



state 422

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' . '=' expr   (rule 155)

    '=' 	shift, and go to state 480



state 423

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' . w_cvar   (rule 311)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 481
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 424

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW expr .   (rule 307)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 307 (non_empty_array_pair_list)



state 425

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' . w_cvar   (rule 310)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 482
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 426

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr   (rule 305)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr .   (rule 306)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_cvar   (rule 309)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 483

    $default	reduce using rule 306 (non_empty_array_pair_list)



state 427

    encaps_var  ->  T_VARIABLE '[' @52 . encaps_var_offset ']'   (rule 327)

    T_STRING	shift, and go to state 484
    T_VARIABLE	shift, and go to state 485
    T_NUM_STRING	shift, and go to state 486

    encaps_var_offset	go to state 487



state 428

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR T_STRING .   (rule 328)

    $default	reduce using rule 328 (encaps_var)



state 429

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'   (rule 330)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 488
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 430

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr '}' .   (rule 329)

    $default	reduce using rule 329 (encaps_var)



state 431

    encaps_var  ->  T_CURLY_OPEN cvar '}' .   (rule 331)

    $default	reduce using rule 331 (encaps_var)



state 432

    expr_without_variable  ->  expr '?' @42 expr ':' . @43 expr   (rule 213)

    $default	reduce using rule 212 (@43)

    @43 	go to state 489



state 433

    expr_without_variable  ->  cvar '=' '&' T_NEW class_name . @36 ctor_arguments   (rule 160)

    $default	reduce using rule 159 (@36)

    @36 	go to state 490



state 434

    function_call  ->  cvar '(' @46 function_call_parameter_list ')' .   (rule 233)

    $default	reduce using rule 233 (function_call)



state 435

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    variable_name  ->  '{' expr . '}'   (rule 294)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 491



state 436

    object_property  ->  cvar_without_objects @50 .   (rule 289)

    $default	reduce using rule 289 (object_property)



state 437

    ref_list  ->  ref_list T_OBJECT_OPERATOR . @49 object_property   (rule 286)

    $default	reduce using rule 285 (@49)

    @49 	go to state 492



state 438

    object_dim_list  ->  object_dim_list '[' . dim_offset ']'   (rule 290)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 282 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 309
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 493
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 439

    object_dim_list  ->  object_dim_list '{' . expr '}'   (rule 291)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 494
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 440

    ctor_arguments  ->  '(' function_call_parameter_list ')' .   (rule 240)

    $default	reduce using rule 240 (ctor_arguments)



state 441

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 . inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 495



state 442

    unticked_statement  ->  T_IF '(' expr ')' @3 statement . @4 elseif_list else_single   (rule 16)

    $default	reduce using rule 15 (@4)

    @4  	go to state 496



state 443

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 function_call_parameter_list . ')'   (rule 235)

    ')' 	shift, and go to state 497



state 444

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' . w_cvar   (rule 121)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 498
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 445

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' expr_without_variable .   (rule 119)
    expr  ->  expr_without_variable .   (rule 268)

    ',' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    $default	reduce using rule 268 (expr)



state 446

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' cvar .   (rule 120)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . '=' '&' T_NEW class_name @36 ctor_arguments   (rule 160)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 171)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 172)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 173)
    function_call  ->  cvar . '(' @46 function_call_parameter_list ')'   (rule 233)
    r_cvar  ->  cvar .   (rule 269)
    rw_cvar  ->  cvar .   (rule 271)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    ',' 	reduce using rule 120 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 271 (rw_cvar)
    T_DEC	reduce using rule 271 (rw_cvar)
    ')' 	reduce using rule 120 (non_empty_function_call_parameter_list)
    $default	reduce using rule 269 (r_cvar)



state 447

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 . expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 499
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 448

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 . while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 500
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 501
    unticked_statement	go to state 66
    while_statement	go to state 502
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 449

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr . ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 503



state 450

    non_empty_for_expr  ->  non_empty_for_expr ',' @34 expr .   (rule 152)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 152 (non_empty_for_expr)



state 451

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar . foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_DOUBLE_ARROW	shift, and go to state 504

    $default	reduce using rule 71 (foreach_optional_arg)

    foreach_optional_arg	go to state 505



state 452

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar . foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_DOUBLE_ARROW	shift, and go to state 504

    $default	reduce using rule 71 (foreach_optional_arg)

    foreach_optional_arg	go to state 506



state 453

    declare_list  ->  T_STRING '=' static_scalar .   (rule 79)

    $default	reduce using rule 79 (declare_list)



state 454

    declare_list  ->  declare_list ',' T_STRING . '=' static_scalar   (rule 80)

    '=' 	shift, and go to state 507



state 455

    declare_statement  ->  ':' . inner_statement_list T_ENDDECLARE ';'   (rule 78)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 508



state 456

    declare_statement  ->  statement .   (rule 77)

    $default	reduce using rule 77 (declare_statement)



state 457

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' declare_statement .   (rule 53)

    $default	reduce using rule 53 (unticked_statement)



state 458

    switch_case_list  ->  ':' . case_list T_ENDSWITCH ';'   (rule 83)
    switch_case_list  ->  ':' . ';' case_list T_ENDSWITCH ';'   (rule 84)

    ';' 	shift, and go to state 509

    $default	reduce using rule 85 (case_list)

    case_list	go to state 510



state 459

    switch_case_list  ->  '{' . case_list '}'   (rule 81)
    switch_case_list  ->  '{' . ';' case_list '}'   (rule 82)

    ';' 	shift, and go to state 511

    $default	reduce using rule 85 (case_list)

    case_list	go to state 512



state 460

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 switch_case_list .   (rule 31)

    $default	reduce using rule 31 (unticked_statement)



state 461

    non_empty_parameter_list  ->  '&' . T_VARIABLE   (rule 107)

    T_VARIABLE	shift, and go to state 513



state 462

    non_empty_parameter_list  ->  T_VARIABLE .   (rule 106)
    non_empty_parameter_list  ->  T_VARIABLE . '=' static_scalar   (rule 109)

    '=' 	shift, and go to state 514

    $default	reduce using rule 106 (non_empty_parameter_list)



state 463

    non_empty_parameter_list  ->  T_CONST . T_VARIABLE   (rule 108)

    T_VARIABLE	shift, and go to state 515



state 464

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list . '(' inner_statement_list ')' ';'   (rule 66)

    '(' 	shift, and go to state 516



state 465

    parameter_list  ->  non_empty_parameter_list .   (rule 104)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' '&' T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_CONST T_VARIABLE   (rule 112)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE '=' static_scalar   (rule 113)

    ',' 	shift, and go to state 517

    $default	reduce using rule 104 (parameter_list)



state 466

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '&' 	shift, and go to state 461
    T_VARIABLE	shift, and go to state 462
    T_CONST	shift, and go to state 463

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 518
    non_empty_parameter_list	go to state 465



state 467

    non_empty_static_array_pair_list  ->  static_scalar . T_DOUBLE_ARROW static_scalar   (rule 265)
    non_empty_static_array_pair_list  ->  static_scalar .   (rule 266)

    T_DOUBLE_ARROW	shift, and go to state 519

    $default	reduce using rule 266 (non_empty_static_array_pair_list)



state 468

    static_scalar  ->  T_ARRAY '(' static_array_pair_list . ')'   (rule 252)

    ')' 	shift, and go to state 520



state 469

    static_array_pair_list  ->  non_empty_static_array_pair_list . possible_comma   (rule 260)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar   (rule 263)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar   (rule 264)

    ',' 	shift, and go to state 521

    $default	reduce using rule 261 (possible_comma)

    possible_comma	go to state 522



state 470

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' static_scalar .   (rule 128)

    $default	reduce using rule 128 (static_var_list)



state 471

    isset_variables  ->  isset_variables ',' @53 cvar .   (rule 344)

    $default	reduce using rule 344 (isset_variables)



state 472

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' . class_statement_list '}'   (rule 70)

    $default	reduce using rule 132 (class_statement_list)

    class_statement_list	go to state 523



state 473

    class_statement  ->  T_OLD_FUNCTION . @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 137 (@32)

    @32 	go to state 524



state 474

    class_statement  ->  T_FUNCTION . @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    $default	reduce using rule 134 (@30)

    @30 	go to state 525



state 475

    class_statement  ->  T_VAR . class_variable_decleration ';'   (rule 133)

    T_VARIABLE	shift, and go to state 526

    class_variable_decleration	go to state 527



state 476

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' class_statement_list '}' .   (rule 68)

    $default	reduce using rule 68 (unticked_declaration_statement)



state 477

    class_statement_list  ->  class_statement_list class_statement .   (rule 131)

    $default	reduce using rule 131 (class_statement_list)



state 478

    assignment_list_element  ->  T_LIST '(' @51 . assignment_list ')'   (rule 301)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 352
    '$' 	shift, and go to state 60

    $default	reduce using rule 302 (assignment_list_element)

    cvar	go to state 353
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 528
    assignment_list_element	go to state 355



state 479

    assignment_list  ->  assignment_list ',' assignment_list_element .   (rule 297)

    $default	reduce using rule 297 (assignment_list)



state 480

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' '=' . expr   (rule 155)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 529
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 481

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' w_cvar .   (rule 311)

    $default	reduce using rule 311 (non_empty_array_pair_list)



state 482

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' w_cvar .   (rule 310)

    $default	reduce using rule 310 (non_empty_array_pair_list)



state 483

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr   (rule 305)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_cvar   (rule 309)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 530
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 531
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 484

    encaps_var_offset  ->  T_STRING .   (rule 332)

    $default	reduce using rule 332 (encaps_var_offset)



state 485

    encaps_var_offset  ->  T_VARIABLE .   (rule 334)

    $default	reduce using rule 334 (encaps_var_offset)



state 486

    encaps_var_offset  ->  T_NUM_STRING .   (rule 333)

    $default	reduce using rule 333 (encaps_var_offset)



state 487

    encaps_var  ->  T_VARIABLE '[' @52 encaps_var_offset . ']'   (rule 327)

    ']' 	shift, and go to state 532



state 488

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'   (rule 330)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ']' 	shift, and go to state 533



state 489

    expr_without_variable  ->  expr '?' @42 expr ':' @43 . expr   (rule 213)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 534
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 490

    expr_without_variable  ->  cvar '=' '&' T_NEW class_name @36 . ctor_arguments   (rule 160)

    '(' 	shift, and go to state 313

    $default	reduce using rule 239 (ctor_arguments)

    ctor_arguments	go to state 535



state 491

    variable_name  ->  '{' expr '}' .   (rule 294)

    $default	reduce using rule 294 (variable_name)



state 492

    ref_list  ->  ref_list T_OBJECT_OPERATOR @49 . object_property   (rule 286)

    T_STRING	shift, and go to state 382
    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 383
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 384
    reference_variable	go to state 78
    compound_variable	go to state 79
    object_property	go to state 536
    object_dim_list	go to state 387
    variable_name	go to state 388
    simple_indirect_reference	go to state 80



state 493

    object_dim_list  ->  object_dim_list '[' dim_offset . ']'   (rule 290)

    ']' 	shift, and go to state 537



state 494

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    object_dim_list  ->  object_dim_list '{' expr . '}'   (rule 291)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 538



state 495

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list . @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_ELSEIF	reduce using rule 18 (@6)
    T_ELSE	reduce using rule 18 (@6)
    T_ENDIF	reduce using rule 18 (@6)
    $default	reduce using rule 7 (@2)

    @2  	go to state 263
    @6  	go to state 539



state 496

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 . elseif_list else_single   (rule 16)

    $default	reduce using rule 94 (elseif_list)

    elseif_list	go to state 540



state 497

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @47 function_call_parameter_list ')' .   (rule 235)

    $default	reduce using rule 235 (function_call)



state 498

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' w_cvar .   (rule 121)

    $default	reduce using rule 121 (non_empty_function_call_parameter_list)



state 499

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr . ')' ';'   (rule 25)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 541



state 500

    while_statement  ->  ':' . inner_statement_list T_ENDWHILE ';'   (rule 93)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 542



state 501

    while_statement  ->  statement .   (rule 92)

    $default	reduce using rule 92 (while_statement)



state 502

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 while_statement .   (rule 22)

    $default	reduce using rule 22 (unticked_statement)



state 503

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' . @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 27 (@12)

    @12 	go to state 543



state 504

    foreach_optional_arg  ->  T_DOUBLE_ARROW . w_cvar   (rule 72)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 544
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 505

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg . ')' @18 foreach_statement   (rule 51)

    ')' 	shift, and go to state 545



state 506

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg . ')' @16 foreach_statement   (rule 48)

    ')' 	shift, and go to state 546



state 507

    declare_list  ->  declare_list ',' T_STRING '=' . static_scalar   (rule 80)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 547



state 508

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    declare_statement  ->  ':' inner_statement_list . T_ENDDECLARE ';'   (rule 78)

    T_ENDDECLARE	shift, and go to state 548

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 509

    switch_case_list  ->  ':' ';' . case_list T_ENDSWITCH ';'   (rule 84)

    $default	reduce using rule 85 (case_list)

    case_list	go to state 549



state 510

    switch_case_list  ->  ':' case_list . T_ENDSWITCH ';'   (rule 83)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_ENDSWITCH	shift, and go to state 550
    T_CASE	shift, and go to state 551
    T_DEFAULT	shift, and go to state 552



state 511

    switch_case_list  ->  '{' ';' . case_list '}'   (rule 82)

    $default	reduce using rule 85 (case_list)

    case_list	go to state 553



state 512

    switch_case_list  ->  '{' case_list . '}'   (rule 81)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_CASE	shift, and go to state 551
    T_DEFAULT	shift, and go to state 552
    '}' 	shift, and go to state 554



state 513

    non_empty_parameter_list  ->  '&' T_VARIABLE .   (rule 107)

    $default	reduce using rule 107 (non_empty_parameter_list)



state 514

    non_empty_parameter_list  ->  T_VARIABLE '=' . static_scalar   (rule 109)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 555



state 515

    non_empty_parameter_list  ->  T_CONST T_VARIABLE .   (rule 108)

    $default	reduce using rule 108 (non_empty_parameter_list)



state 516

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' . inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 556



state 517

    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . '&' T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_CONST T_VARIABLE   (rule 112)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE '=' static_scalar   (rule 113)

    '&' 	shift, and go to state 557
    T_VARIABLE	shift, and go to state 558
    T_CONST	shift, and go to state 559



state 518

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 63)

    ')' 	shift, and go to state 560



state 519

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW . static_scalar   (rule 265)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 561



state 520

    static_scalar  ->  T_ARRAY '(' static_array_pair_list ')' .   (rule 252)

    $default	reduce using rule 252 (static_scalar)



state 521

    possible_comma  ->  ',' .   (rule 262)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar   (rule 263)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar   (rule 264)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 262 (possible_comma)

    common_scalar	go to state 342
    static_scalar	go to state 562



state 522

    static_array_pair_list  ->  non_empty_static_array_pair_list possible_comma .   (rule 260)

    $default	reduce using rule 260 (static_array_pair_list)



state 523

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list . '}'   (rule 70)
    class_statement_list  ->  class_statement_list . class_statement   (rule 131)

    T_OLD_FUNCTION	shift, and go to state 473
    T_FUNCTION	shift, and go to state 474
    T_VAR	shift, and go to state 475
    '}' 	shift, and go to state 563

    class_statement	go to state 477



state 524

    class_statement  ->  T_OLD_FUNCTION @32 . is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    '&' 	shift, and go to state 220

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 564



state 525

    class_statement  ->  T_FUNCTION @30 . is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '&' 	shift, and go to state 220

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 565



state 526

    class_variable_decleration  ->  T_VARIABLE .   (rule 144)
    class_variable_decleration  ->  T_VARIABLE . '=' static_scalar   (rule 145)

    '=' 	shift, and go to state 566

    $default	reduce using rule 144 (class_variable_decleration)



state 527

    class_statement  ->  T_VAR class_variable_decleration . ';'   (rule 133)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE   (rule 142)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE '=' static_scalar   (rule 143)

    ',' 	shift, and go to state 567
    ';' 	shift, and go to state 568



state 528

    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 297)
    assignment_list_element  ->  T_LIST '(' @51 assignment_list . ')'   (rule 301)

    ',' 	shift, and go to state 421
    ')' 	shift, and go to state 569



state 529

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' '=' expr .   (rule 155)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 155 (expr_without_variable)



state 530

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_cvar   (rule 309)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 570
    cvar	go to state 357
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 531

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .   (rule 305)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 305 (non_empty_array_pair_list)



state 532

    encaps_var  ->  T_VARIABLE '[' @52 encaps_var_offset ']' .   (rule 327)

    $default	reduce using rule 327 (encaps_var)



state 533

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'   (rule 330)

    '}' 	shift, and go to state 571



state 534

    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)
    expr_without_variable  ->  expr '?' @42 expr ':' @43 expr .   (rule 213)

    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 213 (expr_without_variable)



state 535

    expr_without_variable  ->  cvar '=' '&' T_NEW class_name @36 ctor_arguments .   (rule 160)

    $default	reduce using rule 160 (expr_without_variable)



state 536

    ref_list  ->  ref_list T_OBJECT_OPERATOR @49 object_property .   (rule 286)

    $default	reduce using rule 286 (ref_list)



state 537

    object_dim_list  ->  object_dim_list '[' dim_offset ']' .   (rule 290)

    $default	reduce using rule 290 (object_dim_list)



state 538

    object_dim_list  ->  object_dim_list '{' expr '}' .   (rule 291)

    $default	reduce using rule 291 (object_dim_list)



state 539

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 . new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 97 (new_elseif_list)

    new_elseif_list	go to state 572



state 540

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list . else_single   (rule 16)
    elseif_list  ->  elseif_list . T_ELSEIF '(' expr ')' @28 statement   (rule 96)

    T_ELSEIF	shift, and go to state 573
    T_ELSE	shift, and go to state 574

    T_ELSEIF	[reduce using rule 100 (else_single)]
    T_ELSE	[reduce using rule 100 (else_single)]
    $default	reduce using rule 100 (else_single)

    else_single	go to state 575



state 541

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' . ';'   (rule 25)

    ';' 	shift, and go to state 576



state 542

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    while_statement  ->  ':' inner_statement_list . T_ENDWHILE ';'   (rule 93)

    T_ENDWHILE	shift, and go to state 577

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 543

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 . for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 578
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 544

    foreach_optional_arg  ->  T_DOUBLE_ARROW w_cvar .   (rule 72)

    $default	reduce using rule 72 (foreach_optional_arg)



state 545

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' . @18 foreach_statement   (rule 51)

    $default	reduce using rule 50 (@18)

    @18 	go to state 579



state 546

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' . @16 foreach_statement   (rule 48)

    $default	reduce using rule 47 (@16)

    @16 	go to state 580



state 547

    declare_list  ->  declare_list ',' T_STRING '=' static_scalar .   (rule 80)

    $default	reduce using rule 80 (declare_list)



state 548

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE . ';'   (rule 78)

    ';' 	shift, and go to state 581



state 549

    switch_case_list  ->  ':' ';' case_list . T_ENDSWITCH ';'   (rule 84)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_ENDSWITCH	shift, and go to state 582
    T_CASE	shift, and go to state 551
    T_DEFAULT	shift, and go to state 552



state 550

    switch_case_list  ->  ':' case_list T_ENDSWITCH . ';'   (rule 83)

    ';' 	shift, and go to state 583



state 551

    case_list  ->  case_list T_CASE . expr case_separator @26 inner_statement_list   (rule 87)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 584
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 552

    case_list  ->  case_list T_DEFAULT . case_separator @27 inner_statement_list   (rule 89)

    ':' 	shift, and go to state 585
    ';' 	shift, and go to state 586

    case_separator	go to state 587



state 553

    switch_case_list  ->  '{' ';' case_list . '}'   (rule 82)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_CASE	shift, and go to state 551
    T_DEFAULT	shift, and go to state 552
    '}' 	shift, and go to state 588



state 554

    switch_case_list  ->  '{' case_list '}' .   (rule 81)

    $default	reduce using rule 81 (switch_case_list)



state 555

    non_empty_parameter_list  ->  T_VARIABLE '=' static_scalar .   (rule 109)

    $default	reduce using rule 109 (non_empty_parameter_list)



state 556

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list . ')' ';'   (rule 66)

    ')' 	shift, and go to state 589

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 557

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' . T_VARIABLE   (rule 111)

    T_VARIABLE	shift, and go to state 590



state 558

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE .   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE . '=' static_scalar   (rule 113)

    '=' 	shift, and go to state 591

    $default	reduce using rule 110 (non_empty_parameter_list)



state 559

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST . T_VARIABLE   (rule 112)

    T_VARIABLE	shift, and go to state 592



state 560

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 63)

    '{' 	shift, and go to state 593



state 561

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW static_scalar .   (rule 265)

    $default	reduce using rule 265 (non_empty_static_array_pair_list)



state 562

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar   (rule 263)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar .   (rule 264)

    T_DOUBLE_ARROW	shift, and go to state 594

    $default	reduce using rule 264 (non_empty_static_array_pair_list)



state 563

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}' .   (rule 70)

    $default	reduce using rule 70 (unticked_declaration_statement)



state 564

    class_statement  ->  T_OLD_FUNCTION @32 is_reference . T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    T_STRING	shift, and go to state 595



state 565

    class_statement  ->  T_FUNCTION @30 is_reference . T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    T_STRING	shift, and go to state 596



state 566

    class_variable_decleration  ->  T_VARIABLE '=' . static_scalar   (rule 145)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 597



state 567

    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE   (rule 142)
    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE '=' static_scalar   (rule 143)

    T_VARIABLE	shift, and go to state 598



state 568

    class_statement  ->  T_VAR class_variable_decleration ';' .   (rule 133)

    $default	reduce using rule 133 (class_statement)



state 569

    assignment_list_element  ->  T_LIST '(' @51 assignment_list ')' .   (rule 301)

    $default	reduce using rule 301 (assignment_list_element)



state 570

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar .   (rule 309)

    $default	reduce using rule 309 (non_empty_array_pair_list)



state 571

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .   (rule 330)

    $default	reduce using rule 330 (encaps_var)



state 572

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list . new_else_single T_ENDIF ';'   (rule 19)
    new_elseif_list  ->  new_elseif_list . T_ELSEIF '(' expr ')' ':' @29 inner_statement_list   (rule 99)

    T_ELSEIF	shift, and go to state 599
    T_ELSE	shift, and go to state 600

    $default	reduce using rule 102 (new_else_single)

    new_else_single	go to state 601



state 573

    elseif_list  ->  elseif_list T_ELSEIF . '(' expr ')' @28 statement   (rule 96)

    '(' 	shift, and go to state 602



state 574

    else_single  ->  T_ELSE . statement   (rule 101)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 603
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 575

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list else_single .   (rule 16)

    $default	reduce using rule 16 (unticked_statement)



state 576

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' ';' .   (rule 25)

    $default	reduce using rule 25 (unticked_statement)



state 577

    while_statement  ->  ':' inner_statement_list T_ENDWHILE . ';'   (rule 93)

    ';' 	shift, and go to state 604



state 578

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr . ')' @13 for_statement   (rule 29)

    ')' 	shift, and go to state 605



state 579

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 . foreach_statement   (rule 51)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 606
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 607
    unticked_statement	go to state 66
    foreach_statement	go to state 608
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 580

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 . foreach_statement   (rule 48)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 606
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 607
    unticked_statement	go to state 66
    foreach_statement	go to state 609
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 581

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE ';' .   (rule 78)

    $default	reduce using rule 78 (declare_statement)



state 582

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH . ';'   (rule 84)

    ';' 	shift, and go to state 610



state 583

    switch_case_list  ->  ':' case_list T_ENDSWITCH ';' .   (rule 83)

    $default	reduce using rule 83 (switch_case_list)



state 584

    case_list  ->  case_list T_CASE expr . case_separator @26 inner_statement_list   (rule 87)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 585
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 586

    case_separator	go to state 611



state 585

    case_separator  ->  ':' .   (rule 90)

    $default	reduce using rule 90 (case_separator)



state 586

    case_separator  ->  ';' .   (rule 91)

    $default	reduce using rule 91 (case_separator)



state 587

    case_list  ->  case_list T_DEFAULT case_separator . @27 inner_statement_list   (rule 89)

    $default	reduce using rule 88 (@27)

    @27 	go to state 612



state 588

    switch_case_list  ->  '{' ';' case_list '}' .   (rule 82)

    $default	reduce using rule 82 (switch_case_list)



state 589

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' . ';'   (rule 66)

    ';' 	shift, and go to state 613



state 590

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' T_VARIABLE .   (rule 111)

    $default	reduce using rule 111 (non_empty_parameter_list)



state 591

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' . static_scalar   (rule 113)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 614



state 592

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST T_VARIABLE .   (rule 112)

    $default	reduce using rule 112 (non_empty_parameter_list)



state 593

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 63)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 615



state 594

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar   (rule 263)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 616



state 595

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING . @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 138 (@33)

    @33 	go to state 617



state 596

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING . @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    $default	reduce using rule 135 (@31)

    @31 	go to state 618



state 597

    class_variable_decleration  ->  T_VARIABLE '=' static_scalar .   (rule 145)

    $default	reduce using rule 145 (class_variable_decleration)



state 598

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE .   (rule 142)
    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE . '=' static_scalar   (rule 143)

    '=' 	shift, and go to state 619

    $default	reduce using rule 142 (class_variable_decleration)



state 599

    new_elseif_list  ->  new_elseif_list T_ELSEIF . '(' expr ')' ':' @29 inner_statement_list   (rule 99)

    '(' 	shift, and go to state 620



state 600

    new_else_single  ->  T_ELSE . ':' inner_statement_list   (rule 103)

    ':' 	shift, and go to state 621



state 601

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single . T_ENDIF ';'   (rule 19)

    T_ENDIF	shift, and go to state 622



state 602

    elseif_list  ->  elseif_list T_ELSEIF '(' . expr ')' @28 statement   (rule 96)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 623
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 603

    else_single  ->  T_ELSE statement .   (rule 101)

    $default	reduce using rule 101 (else_single)



state 604

    while_statement  ->  ':' inner_statement_list T_ENDWHILE ';' .   (rule 93)

    $default	reduce using rule 93 (while_statement)



state 605

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' . @13 for_statement   (rule 29)

    $default	reduce using rule 28 (@13)

    @13 	go to state 624



state 606

    foreach_statement  ->  ':' . inner_statement_list T_ENDFOREACH ';'   (rule 76)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 625



state 607

    foreach_statement  ->  statement .   (rule 75)

    $default	reduce using rule 75 (foreach_statement)



state 608

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement .   (rule 51)

    $default	reduce using rule 51 (unticked_statement)



state 609

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement .   (rule 48)

    $default	reduce using rule 48 (unticked_statement)



state 610

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH ';' .   (rule 84)

    $default	reduce using rule 84 (switch_case_list)



state 611

    case_list  ->  case_list T_CASE expr case_separator . @26 inner_statement_list   (rule 87)

    $default	reduce using rule 86 (@26)

    @26 	go to state 626



state 612

    case_list  ->  case_list T_DEFAULT case_separator @27 . inner_statement_list   (rule 89)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 627



state 613

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';' .   (rule 66)

    $default	reduce using rule 66 (unticked_declaration_statement)



state 614

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' static_scalar .   (rule 113)

    $default	reduce using rule 113 (non_empty_parameter_list)



state 615

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 63)

    '}' 	shift, and go to state 628

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 616

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .   (rule 263)

    $default	reduce using rule 263 (non_empty_static_array_pair_list)



state 617

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 . parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    '&' 	shift, and go to state 461
    T_VARIABLE	shift, and go to state 462
    T_CONST	shift, and go to state 463

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 629
    non_empty_parameter_list	go to state 465



state 618

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '(' 	shift, and go to state 630



state 619

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' . static_scalar   (rule 143)

    '+' 	shift, and go to state 338
    '-' 	shift, and go to state 339
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 340
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 341
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 342
    static_scalar	go to state 631



state 620

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' . expr ')' ':' @29 inner_statement_list   (rule 99)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 632
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 621

    new_else_single  ->  T_ELSE ':' . inner_statement_list   (rule 103)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 633



state 622

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF . ';'   (rule 19)

    ';' 	shift, and go to state 634



state 623

    elseif_list  ->  elseif_list T_ELSEIF '(' expr . ')' @28 statement   (rule 96)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 635



state 624

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 . for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 636
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 637
    unticked_statement	go to state 66
    for_statement	go to state 638
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 625

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    foreach_statement  ->  ':' inner_statement_list . T_ENDFOREACH ';'   (rule 76)

    T_ENDFOREACH	shift, and go to state 639

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 626

    case_list  ->  case_list T_CASE expr case_separator @26 . inner_statement_list   (rule 87)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 640



state 627

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_DEFAULT case_separator @27 inner_statement_list .   (rule 89)

    T_ENDSWITCH	reduce using rule 89 (case_list)
    T_CASE	reduce using rule 89 (case_list)
    T_DEFAULT	reduce using rule 89 (case_list)
    '}' 	reduce using rule 89 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 628

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 63)

    $default	reduce using rule 63 (unticked_declaration_statement)



state 629

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list . '(' inner_statement_list ')' ';'   (rule 139)

    '(' 	shift, and go to state 641



state 630

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '&' 	shift, and go to state 461
    T_VARIABLE	shift, and go to state 462
    T_CONST	shift, and go to state 463

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 642
    non_empty_parameter_list	go to state 465



state 631

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' static_scalar .   (rule 143)

    $default	reduce using rule 143 (class_variable_decleration)



state 632

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr . ')' ':' @29 inner_statement_list   (rule 99)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_OR @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_AND @41 expr   (rule 185)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 186)
    expr_without_variable  ->  expr . '|' expr   (rule 187)
    expr_without_variable  ->  expr . '&' expr   (rule 188)
    expr_without_variable  ->  expr . '^' expr   (rule 189)
    expr_without_variable  ->  expr . '.' expr   (rule 190)
    expr_without_variable  ->  expr . '+' expr   (rule 191)
    expr_without_variable  ->  expr . '-' expr   (rule 192)
    expr_without_variable  ->  expr . '*' expr   (rule 193)
    expr_without_variable  ->  expr . '/' expr   (rule 194)
    expr_without_variable  ->  expr . '%' expr   (rule 195)
    expr_without_variable  ->  expr . T_SL expr   (rule 196)
    expr_without_variable  ->  expr . T_SR expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '<' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '>' expr   (rule 208)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 209)
    expr_without_variable  ->  expr . '?' @42 expr ':' @43 expr   (rule 213)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 643



state 633

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_else_single  ->  T_ELSE ':' inner_statement_list .   (rule 103)

    T_ENDIF	reduce using rule 103 (new_else_single)
    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 634

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';' .   (rule 19)

    $default	reduce using rule 19 (unticked_statement)



state 635

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' . @28 statement   (rule 96)

    $default	reduce using rule 95 (@28)

    @28 	go to state 644



state 636

    for_statement  ->  ':' . inner_statement_list T_ENDFOR ';'   (rule 74)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 645



state 637

    for_statement  ->  statement .   (rule 73)

    $default	reduce using rule 73 (for_statement)



state 638

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement .   (rule 29)

    $default	reduce using rule 29 (unticked_statement)



state 639

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH . ';'   (rule 76)

    ';' 	shift, and go to state 646



state 640

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_CASE expr case_separator @26 inner_statement_list .   (rule 87)

    T_ENDSWITCH	reduce using rule 87 (case_list)
    T_CASE	reduce using rule 87 (case_list)
    T_DEFAULT	reduce using rule 87 (case_list)
    '}' 	reduce using rule 87 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 641

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' . inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 647



state 642

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 136)

    ')' 	shift, and go to state 648



state 643

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' . ':' @29 inner_statement_list   (rule 99)

    ':' 	shift, and go to state 649



state 644

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @28 . statement   (rule 96)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 650
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 645

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    for_statement  ->  ':' inner_statement_list . T_ENDFOR ';'   (rule 74)

    T_ENDFOR	shift, and go to state 651

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 646

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH ';' .   (rule 76)

    $default	reduce using rule 76 (foreach_statement)



state 647

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list . ')' ';'   (rule 139)

    ')' 	shift, and go to state 652

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 648

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 136)

    '{' 	shift, and go to state 653



state 649

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' . @29 inner_statement_list   (rule 99)

    $default	reduce using rule 98 (@29)

    @29 	go to state 654



state 650

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @28 statement .   (rule 96)

    $default	reduce using rule 96 (elseif_list)



state 651

    for_statement  ->  ':' inner_statement_list T_ENDFOR . ';'   (rule 74)

    ';' 	shift, and go to state 655



state 652

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' . ';'   (rule 139)

    ';' 	shift, and go to state 656



state 653

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 136)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 657



state 654

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @29 . inner_statement_list   (rule 99)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 658



state 655

    for_statement  ->  ':' inner_statement_list T_ENDFOR ';' .   (rule 74)

    $default	reduce using rule 74 (for_statement)



state 656

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';' .   (rule 139)

    $default	reduce using rule 139 (class_statement)



state 657

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 136)

    '}' 	shift, and go to state 659

    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 658

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @29 inner_statement_list .   (rule 99)

    T_ELSEIF	reduce using rule 99 (new_elseif_list)
    T_ELSE	reduce using rule 99 (new_elseif_list)
    T_ENDIF	reduce using rule 99 (new_elseif_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 263



state 659

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 136)

    $default	reduce using rule 136 (class_statement)



state 660

    $   	go to state 661



state 661

    $   	go to state 662



state 662

    $default	accept
